{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"NH Switch Guide A guide collaboration between Nintendo Homebrew's Helpers and Staff, from stock to Atmosphere. Discord Help For live support with this guide please visit us in #switch-assistance over at the Nintendo Homebrew Discord . What is homebrew? Homebrew applications are custom, user-made software, which haven\u2019t been authorised by Nintendo. This can include save editing tools, games, emulators, and more. Homebrew can be run for free on your Switch as long as you have a \"first-generation\" system running 9.1.0 or lower, and a USB-C cable. What is Custom Firmware? Custom Firmware (\u201cCFW\u201d) enables you to use more advanced hacks that userland homebrew can\u2019t easily do. For instance, installing game modifications with ease. CFW can be set up on any first-generation console on any version (but will require additional tools). What does this guide install? This guide has the end goal of taking a completely unmodified Switch from Stock Firmware to Atmosphere Custom Firmware. fusee-gelee is currently the best method of launching Custom Firmware that gives us nearly full control of the system. It utilizes a vulnerability in the bootROM of the first-generation Switch systems, allowing us to send any payload we want to the Switch's recovery mode, instead of only ones that Nintendo have authorized. What can I do with Custom Firmware? Customize your HOME Menu with user-created themes and splash screens Use \u201cROM hacks\u201d for games that you own Backup, edit, and restore saves for many games Play games for older systems with various emulators, using RetroArch or other standalone emulators Safely update to the latest system version without fear of losing access to homebrew What do I need to know before starting? Before beginning the guide, you must know the risks of Switch hacking: EVERY time you modify your system, there is always the potential for an UNRECOVERABLE brick. They\u2019re rare but still a possibility so make sure you follow ALL directions EXACTLY. This guide will work on first-generation Switch consoles in all regions on firmware 9.1.0 or below. You will need one of the following in order to successfully follow this guide: A USB-A to USB-C cable, and a PC A USB-OTG cable, a USB-A to USB-C cable, and an Android device This does not work on every android phone A USB-C cable, and an Android device with a USB-C port A Lightning to USB-C cable, and a jailbroken iOS device This method is not covered by the guide, but you can read more about it at this website You will also need a micro SD card that is at least 64 gigabytes or larger if you plan on following this guide through the emummc path, which is safer and strongly recommended. If you must use a smaller SD card, it is possible with the sysmmc path, but strongly not recommended. If everything goes according to plan, you will lose no data and end up with everything that you started with (games, Nintendo Account, saves, etc will be preserved). Keep your device plugged in and charged throughout the entire process to avoid data loss or damage from an unexpected power-off. Custom Firmware is not permanent with current methods, and will be unloaded upon rebooting the system. It is advised that you read the entire guide from start to finish one or more times before actually running through the guide with your system. Continue to Getting Started","title":"Home"},{"location":"#nh-switch-guide","text":"A guide collaboration between Nintendo Homebrew's Helpers and Staff, from stock to Atmosphere. Discord Help For live support with this guide please visit us in #switch-assistance over at the Nintendo Homebrew Discord .","title":"NH Switch Guide"},{"location":"#what-is-homebrew","text":"Homebrew applications are custom, user-made software, which haven\u2019t been authorised by Nintendo. This can include save editing tools, games, emulators, and more. Homebrew can be run for free on your Switch as long as you have a \"first-generation\" system running 9.1.0 or lower, and a USB-C cable.","title":"What is homebrew?"},{"location":"#what-is-custom-firmware","text":"Custom Firmware (\u201cCFW\u201d) enables you to use more advanced hacks that userland homebrew can\u2019t easily do. For instance, installing game modifications with ease. CFW can be set up on any first-generation console on any version (but will require additional tools).","title":"What is Custom Firmware?"},{"location":"#what-does-this-guide-install","text":"This guide has the end goal of taking a completely unmodified Switch from Stock Firmware to Atmosphere Custom Firmware. fusee-gelee is currently the best method of launching Custom Firmware that gives us nearly full control of the system. It utilizes a vulnerability in the bootROM of the first-generation Switch systems, allowing us to send any payload we want to the Switch's recovery mode, instead of only ones that Nintendo have authorized.","title":"What does this guide install?"},{"location":"#what-can-i-do-with-custom-firmware","text":"Customize your HOME Menu with user-created themes and splash screens Use \u201cROM hacks\u201d for games that you own Backup, edit, and restore saves for many games Play games for older systems with various emulators, using RetroArch or other standalone emulators Safely update to the latest system version without fear of losing access to homebrew","title":"What can I do with Custom Firmware?"},{"location":"#what-do-i-need-to-know-before-starting","text":"Before beginning the guide, you must know the risks of Switch hacking: EVERY time you modify your system, there is always the potential for an UNRECOVERABLE brick. They\u2019re rare but still a possibility so make sure you follow ALL directions EXACTLY. This guide will work on first-generation Switch consoles in all regions on firmware 9.1.0 or below. You will need one of the following in order to successfully follow this guide: A USB-A to USB-C cable, and a PC A USB-OTG cable, a USB-A to USB-C cable, and an Android device This does not work on every android phone A USB-C cable, and an Android device with a USB-C port A Lightning to USB-C cable, and a jailbroken iOS device This method is not covered by the guide, but you can read more about it at this website You will also need a micro SD card that is at least 64 gigabytes or larger if you plan on following this guide through the emummc path, which is safer and strongly recommended. If you must use a smaller SD card, it is possible with the sysmmc path, but strongly not recommended. If everything goes according to plan, you will lose no data and end up with everything that you started with (games, Nintendo Account, saves, etc will be preserved). Keep your device plugged in and charged throughout the entire process to avoid data loss or damage from an unexpected power-off. Custom Firmware is not permanent with current methods, and will be unloaded upon rebooting the system. It is advised that you read the entire guide from start to finish one or more times before actually running through the guide with your system.","title":"What do I need to know before starting?"},{"location":"#continue-to-getting-started","text":"","title":"Continue to Getting Started "},{"location":"about/","text":"About this guide This guide was written by staff members of the Nintendo Homebrew Discord Server Credits Flump, jerbear64, Phoenix, xGhostBoyx, Such Meme Many Skill, and oreo639. Thank you to everyone else that contributed to the guide on GitHub, but special thanks to noirscape . You can find this guide on GitHub , It is licensed under the ISC license. Developer / Tool credits Atmosphere-NX for Atmosphere . switchbrew for nx-hbloader and nx-hbmenu . nwert and CTCaer for Hekate . WerWolv for EdiZon . Flagbrew for Checkpoint . mtheall for FTPD . joel16 for NX-Shell . Cease & DeSwitch for fusee-gelee . MenosGrante for Rekado . eliboa for TegraRcmGUI . vgmoose , pwsincd , rw-r-r_0644 and crc32 for hb-appstore . exelix for NXThemes Installer and SwitchThemeInjector . Essometer for collecting patched Switch serials. shchmue for Lockpick and Lockpick_RCM . Ave for 90DNS . Nexrem (meganukebmp) for the Switch 90DNS Tester . exelix11 for Switch Theme Injector . vgmoose for hb-appstore . ITotalJustice for atmosphere-updater .","title":"About"},{"location":"about/#about-this-guide","text":"This guide was written by staff members of the Nintendo Homebrew Discord Server Credits Flump, jerbear64, Phoenix, xGhostBoyx, Such Meme Many Skill, and oreo639. Thank you to everyone else that contributed to the guide on GitHub, but special thanks to noirscape . You can find this guide on GitHub , It is licensed under the ISC license. Developer / Tool credits Atmosphere-NX for Atmosphere . switchbrew for nx-hbloader and nx-hbmenu . nwert and CTCaer for Hekate . WerWolv for EdiZon . Flagbrew for Checkpoint . mtheall for FTPD . joel16 for NX-Shell . Cease & DeSwitch for fusee-gelee . MenosGrante for Rekado . eliboa for TegraRcmGUI . vgmoose , pwsincd , rw-r-r_0644 and crc32 for hb-appstore . exelix for NXThemes Installer and SwitchThemeInjector . Essometer for collecting patched Switch serials. shchmue for Lockpick and Lockpick_RCM . Ave for 90DNS . Nexrem (meganukebmp) for the Switch 90DNS Tester . exelix11 for Switch Theme Injector . vgmoose for hb-appstore . ITotalJustice for atmosphere-updater .","title":"About this guide"},{"location":"faq/","text":"What firmware versions are currently hackable? Currently two hardware revisions of the Switch exist. Any Switch bought or manufactured before the middle of 2018 has a bootrom bug that allows us to run code regardless of the firmware version on the Switch. When Nintendo updates the system, however, CFW will usually need an update to account for it. This bug cannot be fixed by Nintendo once the console leaves the factory, unless the console is sent in for repairs. This means that all current and future firmwares will be able to launch CFW through this exploit on the old hardware revision. Any console purchased after approximately August 2018 is likely to be patched. This includes the latest units on shelves, referred to as 'red box' or 'Mariko'. Mariko is hardware patched, but may come on a vulnerable firmware. Currently the only way to know if your Switch is hackable is by trying to send the payload in RCM. Even with this exploit fixed, many Switches on 8.0.1 and below will be hackable to some degree in the future (see \"Should I update my Firmware?\" for much more detailed information). The serial number on the back of the box can possibly tell you which consoles are patched and which aren't. See here for an up to date list. How do I use the exploit? How can I boot into RCM? To launch CFW through the exploit, the Switch needs to be in \"Recovery Mode\"(RCM). The easiest way to enter RCM is by grounding pin 10 in the right joycon rail and holding VOL+ on boot. Several methods and designs to do this exist, see our guide for more information. Once the Switch is in RCM it needs to be connected to either a computer, phone or dongle to send the exploit and the payload. This procedure needs to happen every time the Switch boots from a completely \"off\" state, otherwise the Switch will boot into the stock firmware. What makes a good jig good? Can I use a paperclip? Most people prefer to use 3d-printed jigs to enter RCM. These jigs are made in a way that they slide into the right joycon rail and have a piece of connected wire that then bridges pin 10 and one of the grounded pins on the Switch. A lot of different designs for these jigs exist, but it is important to understand, that these jigs can damage the Switch if they are made in a bad way. Since the wire in the jig is supposed to touch the pads inside the Switch's joycon rail, it is important to use wire that is thin, not rigid and bent/not pointy. Paperclips make for potentially dangerous jigs, as they are made out of a hard material, are rigid and pointy and can easily scratch off the pads inside the Switch. A good jig uses 32Gauge(0.2mm diameter) wire and is bent in a way that the end of the wire does not scratch the pads. Switch Jigs sells jigs we consider \"good\". You can also download and 3d-print your own jig and use the pictures on the website to guide you on how to bend the wire correctly. Is there an easier way to enter RCM? To enter RCM more comfortably a solution called \"AutoRCM\" exists. Once set up, this method will always boot the Switch into RCM, even without a jig or holding any buttons. This works by \"bricking\" the Switch in a controlled manner. The Switch detects that something is wrong and boots into RCM to get repaired. The big downside of this method is, that it is impossible to boot the Switch without a computer, phone or dongle, as it will never boot into stock firmware by itself, and that it requires an SD card with the proper CFW files on it at all times. In addition, if the battery of the Switch is completely drained, the Switch will need to charge to at least 10% in Hekate before launching Atmosphere, otherwise the Switch will refuse to boot due to the low battery. Charging in RCM is not recommended as this is very slow. AutoRCM can be reversed, but it is advised to keep a working NAND and BOOT0/1 backup before using it. Many Android-phones are able to send the exploit to the Switch, making them a perfect portable way to launch CFW. Different designs for portable dongles exist, ranging from Raspberry Pi Zero and Arduino projects to internal dongles, that work completely autonomous. The latter should only be done by advanced users, as it requires soldering onto the Switch mainboard itself. Should I update my Firmware? If your Switch is one of the new hardware revisions that patched the exploit in RCM and you are on firmware 7.0.1 or lower, you should not update if you want to have CFW in the forseeable future. If your Switch is one of the older hardware revisions and you don't mind having to use jigs/hardmods/AutoRCM and sending the exploit via computer, phone or dongle everytime you want to launch into CFW then it is completely safe to update. If you want the chance to maybe, one day, not have to use a external device, then it is recommended to stay on a FW as low as possible. Beware that this means that you potentially need to wait for a very long time (months to years) for this to happen, if ever. Private exploits to launch CFW over the Browser are known to exist for firmwares up to 7.0.1. Downgrading on the Switch is possible, but it requires using AutoRCM and a custom bootloader payload to bypass the Switch's several hardware anti-downgrade mechanisms. This will not work on an unpatched system, and is practically useless for most users. On every boot the Switch firmware checks how many e-fuses have been burned and how many e-fuses the Switch expects to be burned. Major updates to the Switch, or updates in which a large vulnerability has been patched, irreversibly burn one of the Switch's 64 \"e-fuses\". If the Switch ever detects that more e-fuses have been burned than expected (meaning a downgrade happened), it will refuse to boot. Replacing e-fuses is not an option. You can find more information about fuses here Atmosphere 0.10.0 works fine with the new 9.1.0 firmware update on unpatched units. The situation for patched and new units is this: \"Old\" Patched Switch (HAC-001): Do NOT update past 7.0.1. Units on 7.0.1 and below will eventually get CFW. Patched units that have upgraded to 8.0.0 or 8.0.1 will likely get homebrew. \"New\" Switch (HAC-001-01): Do NOT update past 8.0.1. Units on 8.0.1 and below will likely get homebrew. Units on 8.1.0 and higher are not expected to be hacked and can be updated. Switch Lite (HDH-001): Do NOT update past 8.0.1. Units on 8.0.1 and below will likely get homebrew. Units on 8.1.0 and higher are not expected to be hacked and can be updated. A method to update without burning e-fuses exists, but, like downgrading, it forces you to use AutoRCM and sending the exploit via USB every time, as booting into the stock firmware even once would instantly burn the e-fuse. Note that other anti-downgrade mechanisms exist, making it for example impossible to boot game carts on a firmware below 4.1/9.0.0 if the Switch has ever launched a game on firmware 4.1+/9.0.0+. This can only be worked around by completely disabling the game cart slot while on 4.1/9.0.0 or greater, which is similarly impractical for most users. Is it safe to use homebrew? Will I get banned? The Switch comes with a lot of telemetry, and has been called a \"telemetry monster\" by several prominent developers. As long as the Switch is connected to the internet, Nintendo gets a report about a lot of different actions and states and has the option to log or act on them. Even if the Switch is offline and connects to the internet at a later point, Nintendo still recieves information about what happened while the Switch was disconnected. To disable some of this telemetry, it is advised to disable the sending of error reports in the System Settings of the Switch. Additionally if you live in the EU you can set the \"do not share\" option on Nintendo's website to prevent your Switch from sending a lot of telemetry, although the effectiveness of this is questionable. Nintendo still receives a lot of information, even with those options disabled. We also cannot know if Nintendo decides to look for something in the logs and ban people in retrospect. They have also shown to expand their telemetry options with every other firmware update. Currently all bans have been for very obvious and intrusive actions, specifically: Developers using their unique Switch data to poke and reverse-engineer Nintendos Server responses People pirating games and using them online People changing their profile pictures to custom pictures People using savegame editors to unlock content that is not available yet and using it online (Splatoon 2) People cheating online in general (Modifying Cart stats in MK8) People installing homebrew NSP files, which Nintendo can pick up on with their telemetry Atmosphere stops some, but not all of Nintendo's telemetry, and prevents crash reports from being sent. This means Nintendo can't tell if anything, including homebrew or modded games crashed, and Atmosphere dumps the crash log to the SD card to help homebrew developers. However, Nintendo still receives information about what is being played, and general system report information. Atmosphere is not a silver bullet, and this does not mean that Nintendo won't decide to ban people for harmless homebrew in the future. If you are scared to get banned then don't use homebrew for now. Atmosphere now supports emuMMC (emuNAND): a copy of Switch system software, run entirely from the SD card instead. This erases ban risks due to the fact that emuMMC is run in a quarantined, offline state, not touching the internal memory. You are still able to boot into original firmware to play online. For patched units reliant on deja-vu, sysNAND will always have to be on a firmware below 4.1. For switches from 5.0 to 7.0.1 deja-vu isn't quite out yet but is coming soon. (Also please note that firmwares 8.0.0+ will never work with deja-vu) You can use an updated emuMMC dedicated to online/clean play, while your sysNAND is used offline for custom firmware. We do not recommend the use of ReiNX or SX OS for many reasons, primary among them that they use lots of assets from Atmosphere and offer no real benefit that Atmosphere does not offer anyway. We also do not recommend Kosmos, as its large amount of extras on top of regular Atmosphere make it difficult to troubleshoot strange issues. All of these alternative CFWs also tend to use non-conventional setups which can cause issues that make it difficult to troubleshoot, which is another reason we prefer using Atmosphere. Additionally, it is advised to use 90DNS which blocks connections to any Nintendo servers. If you use an emuNAND for CFW and keep your sysNAND clean for playing online, you should use 90DNS on your emuNAND. Note: Keeping your emuNAND \"dirty\" and your sysNAND \"clean\" pertains primarily to those using the RCM exploit. Users employing Nereba or Caffeine will do the opposite. What formats can homebrew come in Homebrew can come in two different formats, namely in nro files and in bin files. nro Files are placed in the switch folder on your SD card and can be launched using the Homebrew menu. bin This format is used as a payload and is to be pushed in RCM using a payload launcher like tegrarcmgui on windows and fusee-interfacee-tk on other operating systems. Homebrew risks Be careful with launching downloaded homebrew! If you don't know the source, it's best not to launch it. Homebrew can potentially damage your system! Atmosphere provides protections against common bricking methods, but these are not guaranteed to always work! What microSD card/format should I use? microSD cards that are 32GB or smaller can be used for homebrew, but are not recommended as these will not permit you to have a full NAND dump and/or an emuMMC on them. The recommended microSD card size is 128GB. This will permit you to make a full NAND dump as well as having enough space to run an emuNAND in the future while also having adequate space for homebrew. The recommended filesystem format is FAT32. While the Switch supports exFAT through an additional update from Nintendo, this filesystem is prone to corruption and as a result is not advisable. Fake microSD cards Do not buy microSD cards from sites like eBay. These microSD cards are often fake and do not have the advertised amount of storage and will result in data corruption if used. Amazon has had some problems with fake SD cards, so we recommend buying them at a physical store. Even on trustworthy sites, always, always check reviews on a product before buying!! If you suspect your microSD card is fake or damaged, see the instructions here to verify the integrity of your SD card. Amazon/eBay/Aliexpress jigs Although some Switch jigs are for sale on these websites and others like them, we have no way of verifying that they are appropriate or safe for use with the Switch and as such we do not recommend buying from these websites. The only seller we trust due to their reputation and our overall experience with the many jigs they have sent out is Switch Jigs . My homebrew is not showing up on the menu This is an issue primarily affecting macOS users, but may occur on other devices as well. If you are able to launch the homebrew menu, but you are not seeing some or any of your homebrew, you will need to unset the archive bit with Hekate. Send the Hekate payload to your Switch by following these instructions: here Click on Tools on the top menu bar In the bottom left corner click on Archive bit * AutoRCM Click on Unset Archive bit - this might take a while Press Close in the top right corner Press Home in the top menu bar to get back from where you started Follow the instructions at the Launching CFW page here to launch Atmosphere.","title":"FAQ"},{"location":"faq/#what-firmware-versions-are-currently-hackable","text":"Currently two hardware revisions of the Switch exist. Any Switch bought or manufactured before the middle of 2018 has a bootrom bug that allows us to run code regardless of the firmware version on the Switch. When Nintendo updates the system, however, CFW will usually need an update to account for it. This bug cannot be fixed by Nintendo once the console leaves the factory, unless the console is sent in for repairs. This means that all current and future firmwares will be able to launch CFW through this exploit on the old hardware revision. Any console purchased after approximately August 2018 is likely to be patched. This includes the latest units on shelves, referred to as 'red box' or 'Mariko'. Mariko is hardware patched, but may come on a vulnerable firmware. Currently the only way to know if your Switch is hackable is by trying to send the payload in RCM. Even with this exploit fixed, many Switches on 8.0.1 and below will be hackable to some degree in the future (see \"Should I update my Firmware?\" for much more detailed information). The serial number on the back of the box can possibly tell you which consoles are patched and which aren't. See here for an up to date list.","title":"What firmware versions are currently hackable?"},{"location":"faq/#how-do-i-use-the-exploit-how-can-i-boot-into-rcm","text":"To launch CFW through the exploit, the Switch needs to be in \"Recovery Mode\"(RCM). The easiest way to enter RCM is by grounding pin 10 in the right joycon rail and holding VOL+ on boot. Several methods and designs to do this exist, see our guide for more information. Once the Switch is in RCM it needs to be connected to either a computer, phone or dongle to send the exploit and the payload. This procedure needs to happen every time the Switch boots from a completely \"off\" state, otherwise the Switch will boot into the stock firmware.","title":"How do I use the exploit? How can I boot into RCM?"},{"location":"faq/#what-makes-a-good-jig-good-can-i-use-a-paperclip","text":"Most people prefer to use 3d-printed jigs to enter RCM. These jigs are made in a way that they slide into the right joycon rail and have a piece of connected wire that then bridges pin 10 and one of the grounded pins on the Switch. A lot of different designs for these jigs exist, but it is important to understand, that these jigs can damage the Switch if they are made in a bad way. Since the wire in the jig is supposed to touch the pads inside the Switch's joycon rail, it is important to use wire that is thin, not rigid and bent/not pointy. Paperclips make for potentially dangerous jigs, as they are made out of a hard material, are rigid and pointy and can easily scratch off the pads inside the Switch. A good jig uses 32Gauge(0.2mm diameter) wire and is bent in a way that the end of the wire does not scratch the pads. Switch Jigs sells jigs we consider \"good\". You can also download and 3d-print your own jig and use the pictures on the website to guide you on how to bend the wire correctly.","title":"What makes a good jig good? Can I use a paperclip?"},{"location":"faq/#is-there-an-easier-way-to-enter-rcm","text":"To enter RCM more comfortably a solution called \"AutoRCM\" exists. Once set up, this method will always boot the Switch into RCM, even without a jig or holding any buttons. This works by \"bricking\" the Switch in a controlled manner. The Switch detects that something is wrong and boots into RCM to get repaired. The big downside of this method is, that it is impossible to boot the Switch without a computer, phone or dongle, as it will never boot into stock firmware by itself, and that it requires an SD card with the proper CFW files on it at all times. In addition, if the battery of the Switch is completely drained, the Switch will need to charge to at least 10% in Hekate before launching Atmosphere, otherwise the Switch will refuse to boot due to the low battery. Charging in RCM is not recommended as this is very slow. AutoRCM can be reversed, but it is advised to keep a working NAND and BOOT0/1 backup before using it. Many Android-phones are able to send the exploit to the Switch, making them a perfect portable way to launch CFW. Different designs for portable dongles exist, ranging from Raspberry Pi Zero and Arduino projects to internal dongles, that work completely autonomous. The latter should only be done by advanced users, as it requires soldering onto the Switch mainboard itself.","title":"Is there an easier way to enter RCM?"},{"location":"faq/#should-i-update-my-firmware","text":"If your Switch is one of the new hardware revisions that patched the exploit in RCM and you are on firmware 7.0.1 or lower, you should not update if you want to have CFW in the forseeable future. If your Switch is one of the older hardware revisions and you don't mind having to use jigs/hardmods/AutoRCM and sending the exploit via computer, phone or dongle everytime you want to launch into CFW then it is completely safe to update. If you want the chance to maybe, one day, not have to use a external device, then it is recommended to stay on a FW as low as possible. Beware that this means that you potentially need to wait for a very long time (months to years) for this to happen, if ever. Private exploits to launch CFW over the Browser are known to exist for firmwares up to 7.0.1. Downgrading on the Switch is possible, but it requires using AutoRCM and a custom bootloader payload to bypass the Switch's several hardware anti-downgrade mechanisms. This will not work on an unpatched system, and is practically useless for most users. On every boot the Switch firmware checks how many e-fuses have been burned and how many e-fuses the Switch expects to be burned. Major updates to the Switch, or updates in which a large vulnerability has been patched, irreversibly burn one of the Switch's 64 \"e-fuses\". If the Switch ever detects that more e-fuses have been burned than expected (meaning a downgrade happened), it will refuse to boot. Replacing e-fuses is not an option. You can find more information about fuses here Atmosphere 0.10.0 works fine with the new 9.1.0 firmware update on unpatched units. The situation for patched and new units is this: \"Old\" Patched Switch (HAC-001): Do NOT update past 7.0.1. Units on 7.0.1 and below will eventually get CFW. Patched units that have upgraded to 8.0.0 or 8.0.1 will likely get homebrew. \"New\" Switch (HAC-001-01): Do NOT update past 8.0.1. Units on 8.0.1 and below will likely get homebrew. Units on 8.1.0 and higher are not expected to be hacked and can be updated. Switch Lite (HDH-001): Do NOT update past 8.0.1. Units on 8.0.1 and below will likely get homebrew. Units on 8.1.0 and higher are not expected to be hacked and can be updated. A method to update without burning e-fuses exists, but, like downgrading, it forces you to use AutoRCM and sending the exploit via USB every time, as booting into the stock firmware even once would instantly burn the e-fuse. Note that other anti-downgrade mechanisms exist, making it for example impossible to boot game carts on a firmware below 4.1/9.0.0 if the Switch has ever launched a game on firmware 4.1+/9.0.0+. This can only be worked around by completely disabling the game cart slot while on 4.1/9.0.0 or greater, which is similarly impractical for most users.","title":"Should I update my Firmware?"},{"location":"faq/#is-it-safe-to-use-homebrew-will-i-get-banned","text":"The Switch comes with a lot of telemetry, and has been called a \"telemetry monster\" by several prominent developers. As long as the Switch is connected to the internet, Nintendo gets a report about a lot of different actions and states and has the option to log or act on them. Even if the Switch is offline and connects to the internet at a later point, Nintendo still recieves information about what happened while the Switch was disconnected. To disable some of this telemetry, it is advised to disable the sending of error reports in the System Settings of the Switch. Additionally if you live in the EU you can set the \"do not share\" option on Nintendo's website to prevent your Switch from sending a lot of telemetry, although the effectiveness of this is questionable. Nintendo still receives a lot of information, even with those options disabled. We also cannot know if Nintendo decides to look for something in the logs and ban people in retrospect. They have also shown to expand their telemetry options with every other firmware update. Currently all bans have been for very obvious and intrusive actions, specifically: Developers using their unique Switch data to poke and reverse-engineer Nintendos Server responses People pirating games and using them online People changing their profile pictures to custom pictures People using savegame editors to unlock content that is not available yet and using it online (Splatoon 2) People cheating online in general (Modifying Cart stats in MK8) People installing homebrew NSP files, which Nintendo can pick up on with their telemetry Atmosphere stops some, but not all of Nintendo's telemetry, and prevents crash reports from being sent. This means Nintendo can't tell if anything, including homebrew or modded games crashed, and Atmosphere dumps the crash log to the SD card to help homebrew developers. However, Nintendo still receives information about what is being played, and general system report information. Atmosphere is not a silver bullet, and this does not mean that Nintendo won't decide to ban people for harmless homebrew in the future. If you are scared to get banned then don't use homebrew for now. Atmosphere now supports emuMMC (emuNAND): a copy of Switch system software, run entirely from the SD card instead. This erases ban risks due to the fact that emuMMC is run in a quarantined, offline state, not touching the internal memory. You are still able to boot into original firmware to play online. For patched units reliant on deja-vu, sysNAND will always have to be on a firmware below 4.1. For switches from 5.0 to 7.0.1 deja-vu isn't quite out yet but is coming soon. (Also please note that firmwares 8.0.0+ will never work with deja-vu) You can use an updated emuMMC dedicated to online/clean play, while your sysNAND is used offline for custom firmware. We do not recommend the use of ReiNX or SX OS for many reasons, primary among them that they use lots of assets from Atmosphere and offer no real benefit that Atmosphere does not offer anyway. We also do not recommend Kosmos, as its large amount of extras on top of regular Atmosphere make it difficult to troubleshoot strange issues. All of these alternative CFWs also tend to use non-conventional setups which can cause issues that make it difficult to troubleshoot, which is another reason we prefer using Atmosphere. Additionally, it is advised to use 90DNS which blocks connections to any Nintendo servers. If you use an emuNAND for CFW and keep your sysNAND clean for playing online, you should use 90DNS on your emuNAND. Note: Keeping your emuNAND \"dirty\" and your sysNAND \"clean\" pertains primarily to those using the RCM exploit. Users employing Nereba or Caffeine will do the opposite.","title":"Is it safe to use homebrew? Will I get banned?"},{"location":"faq/#what-formats-can-homebrew-come-in","text":"Homebrew can come in two different formats, namely in nro files and in bin files. nro Files are placed in the switch folder on your SD card and can be launched using the Homebrew menu. bin This format is used as a payload and is to be pushed in RCM using a payload launcher like tegrarcmgui on windows and fusee-interfacee-tk on other operating systems. Homebrew risks Be careful with launching downloaded homebrew! If you don't know the source, it's best not to launch it. Homebrew can potentially damage your system! Atmosphere provides protections against common bricking methods, but these are not guaranteed to always work!","title":"What formats can homebrew come in"},{"location":"faq/#what-microsd-cardformat-should-i-use","text":"microSD cards that are 32GB or smaller can be used for homebrew, but are not recommended as these will not permit you to have a full NAND dump and/or an emuMMC on them. The recommended microSD card size is 128GB. This will permit you to make a full NAND dump as well as having enough space to run an emuNAND in the future while also having adequate space for homebrew. The recommended filesystem format is FAT32. While the Switch supports exFAT through an additional update from Nintendo, this filesystem is prone to corruption and as a result is not advisable.","title":"What microSD card/format should I use?"},{"location":"faq/#fake-microsd-cards","text":"Do not buy microSD cards from sites like eBay. These microSD cards are often fake and do not have the advertised amount of storage and will result in data corruption if used. Amazon has had some problems with fake SD cards, so we recommend buying them at a physical store. Even on trustworthy sites, always, always check reviews on a product before buying!! If you suspect your microSD card is fake or damaged, see the instructions here to verify the integrity of your SD card.","title":"Fake microSD cards"},{"location":"faq/#amazonebayaliexpress-jigs","text":"Although some Switch jigs are for sale on these websites and others like them, we have no way of verifying that they are appropriate or safe for use with the Switch and as such we do not recommend buying from these websites. The only seller we trust due to their reputation and our overall experience with the many jigs they have sent out is Switch Jigs .","title":"Amazon/eBay/Aliexpress jigs"},{"location":"faq/#my-homebrew-is-not-showing-up-on-the-menu","text":"This is an issue primarily affecting macOS users, but may occur on other devices as well. If you are able to launch the homebrew menu, but you are not seeing some or any of your homebrew, you will need to unset the archive bit with Hekate. Send the Hekate payload to your Switch by following these instructions: here Click on Tools on the top menu bar In the bottom left corner click on Archive bit * AutoRCM Click on Unset Archive bit - this might take a while Press Close in the top right corner Press Home in the top menu bar to get back from where you started Follow the instructions at the Launching CFW page here to launch Atmosphere.","title":"My homebrew is not showing up on the menu"},{"location":"extras/adding_udev/","text":"Linux - Run payload sender without root This section details how to add an udev rule to let you send a payload to the Nintendo Switch without needing to use sudo . The following instructions are not for beginners. Only do this if you are confident in what you are doing. The following instructions only work if you have a system that implements udev . Most modern distros come with systemd already installed, which includes a udev implementation. There are differing implementations of the following commands on different distros. The commands below are assumed to be ran on Ubuntu. Check your distros manual if you are not running Ubuntu for the equivalent commands. Do the following instructions while your Switch is not connected to your computer. Creating a new group To start, we will create a new group and add ourselves to it. The group the Nintendo Switch device will be owned by on Linux will be set to this group. Open a terminal. Enter the following command: sudo groupadd nintendo_switch . Enter your password when prompted. Enter the following command: sudo usermod -a -G nintendo_switch $USER . Make sure that the G is capitalized! Close the terminal. Adding a udev rule Next we're gonna add a new udev rule. udev is a device manager for the linux kernel. The rule we're gonna specify is that if the Switch is connected in RCM mode, the group the Switch belongs to will be the group we made in the previous section. Open a terminal. Change to the root user with the following command: sudo su . Enter your password when prompted. Enter the following command: mkdir -p /etc/udev/rules.d . Enter the following command: echo 'SUBSYSTEMS==\"usb\", ATTRS{manufacturer}==\"NVIDIA Corp.\", ATTRS{product}==\"APX\", GROUP=\"nintendo_switch\"' > /etc/udev/rules.d/10-switch.rules . Enter the following command: udevadm control --reload . Enter the following command: udevadm trigger . Logout and log back in. You should now be able to run the payload sender without having to use sudo .","title":"Linux injection without root"},{"location":"extras/adding_udev/#linux-run-payload-sender-without-root","text":"This section details how to add an udev rule to let you send a payload to the Nintendo Switch without needing to use sudo . The following instructions are not for beginners. Only do this if you are confident in what you are doing. The following instructions only work if you have a system that implements udev . Most modern distros come with systemd already installed, which includes a udev implementation. There are differing implementations of the following commands on different distros. The commands below are assumed to be ran on Ubuntu. Check your distros manual if you are not running Ubuntu for the equivalent commands. Do the following instructions while your Switch is not connected to your computer.","title":"Linux - Run payload sender without root"},{"location":"extras/adding_udev/#creating-a-new-group","text":"To start, we will create a new group and add ourselves to it. The group the Nintendo Switch device will be owned by on Linux will be set to this group. Open a terminal. Enter the following command: sudo groupadd nintendo_switch . Enter your password when prompted. Enter the following command: sudo usermod -a -G nintendo_switch $USER . Make sure that the G is capitalized! Close the terminal.","title":"Creating a new group"},{"location":"extras/adding_udev/#adding-a-udev-rule","text":"Next we're gonna add a new udev rule. udev is a device manager for the linux kernel. The rule we're gonna specify is that if the Switch is connected in RCM mode, the group the Switch belongs to will be the group we made in the previous section. Open a terminal. Change to the root user with the following command: sudo su . Enter your password when prompted. Enter the following command: mkdir -p /etc/udev/rules.d . Enter the following command: echo 'SUBSYSTEMS==\"usb\", ATTRS{manufacturer}==\"NVIDIA Corp.\", ATTRS{product}==\"APX\", GROUP=\"nintendo_switch\"' > /etc/udev/rules.d/10-switch.rules . Enter the following command: udevadm control --reload . Enter the following command: udevadm trigger . Logout and log back in. You should now be able to run the payload sender without having to use sudo .","title":"Adding a udev rule"},{"location":"extras/alternate_bootsetups/","text":"Alternate boot setups If you need to troubleshoot something, or need to try a different boot setup, read on. Do I need any of these? Unless you are experiencing problems with booting or Atmosphere itself, it's strongly recommended to use the main guide instead of these. They are provided for the sake of completeness. Chainloading Fusee-primary from Hekate What you need The latest release of Hekate The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin hekate_ipl.ini Instructions Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy fusee-primary.bin to the atmosphere folder on your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy hekate_ipl.ini to the bootloader folder on your SD card Setup is complete, now you can boot CFW by injecting the hekate_ctcaer .bin file from the Hekate zip Using Fusee-primary without Hekate What you need The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin Instructions Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Setup is complete, now you can boot CFW by injecting fusee-primary.bin","title":"Alternate Boot Setups"},{"location":"extras/alternate_bootsetups/#alternate-boot-setups","text":"If you need to troubleshoot something, or need to try a different boot setup, read on. Do I need any of these? Unless you are experiencing problems with booting or Atmosphere itself, it's strongly recommended to use the main guide instead of these. They are provided for the sake of completeness.","title":"Alternate boot setups"},{"location":"extras/alternate_bootsetups/#chainloading-fusee-primary-from-hekate","text":"What you need The latest release of Hekate The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin hekate_ipl.ini","title":"Chainloading Fusee-primary from Hekate"},{"location":"extras/alternate_bootsetups/#instructions","text":"Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy fusee-primary.bin to the atmosphere folder on your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy hekate_ipl.ini to the bootloader folder on your SD card Setup is complete, now you can boot CFW by injecting the hekate_ctcaer .bin file from the Hekate zip","title":"Instructions"},{"location":"extras/alternate_bootsetups/#using-fusee-primary-without-hekate","text":"What you need The latest release of Atmosphere You will need to download both the release zip and the fusee-primary.bin","title":"Using Fusee-primary without Hekate"},{"location":"extras/alternate_bootsetups/#instructions_1","text":"Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Setup is complete, now you can boot CFW by injecting fusee-primary.bin","title":"Instructions"},{"location":"extras/autorcm/","text":"AutoRCM What is AutoRCM? AutoRCM is a controlled brick, bricking a part of the boot0/1 to make the console believe it's bricked and boot straight to RCM (recovery mode). This means that if you're not careful around AutoRCM, you can end up damaging your console. Please take care when using AutoRCM. Note: Before you freak out if the switch's screen stays black when you power on your switch after activating AutoRCM, it's not bricked. it's in RCM. If you don't have a boot0/1 backup yet... You really want to kill your console huh? If you haven't made a boot0/1 backup yet, it is recommended to make one right now . Boot Hekate Go to Tools , and select Backup eMMC Then tap eMMC BOOT0 & BOOT1 and let the process complete. Disadvantages of AutoRCM There are a couple of disadvantages you should consider before installing AutoRCM: Your Switch will not boot normally with AutoRCM installed. This means you will need to keep a device ready to inject a payload every time you power it on (similar to a \"tethered jailbreak\"). Note: sleep mode is not considered \"powering on\" the console. Sleep mode will still work as intended When completely discharged, your Switch will take a very long time to charge while in RCM. This means that you'll be waiting around an hour or two for the battery to fully recharge to even boot your console again. Advantages of AutoRCM AutoRCM can be used for good as well: If you were having trouble getting into RCM before, because for example you're using the tinfoil method, now you can get into RCM every time If you want to keep fuses unburned, you can do so with AutoRCM, as the Switch never gets the change to burn them after updating when using AutoRCM Easier to inject a payload using a payload injector If, despite all of the warnings above, you still want to install AutoRCM, and understand the risks, do the following: Boot Hekate Go to Tools At the bottom of the page, tap Archive bit - AutoRCM Then tap AutoRCM . It will show a little ON next to the option once you have done this","title":"AutoRCM"},{"location":"extras/autorcm/#autorcm","text":"What is AutoRCM? AutoRCM is a controlled brick, bricking a part of the boot0/1 to make the console believe it's bricked and boot straight to RCM (recovery mode). This means that if you're not careful around AutoRCM, you can end up damaging your console. Please take care when using AutoRCM. Note: Before you freak out if the switch's screen stays black when you power on your switch after activating AutoRCM, it's not bricked. it's in RCM. If you don't have a boot0/1 backup yet... You really want to kill your console huh? If you haven't made a boot0/1 backup yet, it is recommended to make one right now . Boot Hekate Go to Tools , and select Backup eMMC Then tap eMMC BOOT0 & BOOT1 and let the process complete. Disadvantages of AutoRCM There are a couple of disadvantages you should consider before installing AutoRCM: Your Switch will not boot normally with AutoRCM installed. This means you will need to keep a device ready to inject a payload every time you power it on (similar to a \"tethered jailbreak\"). Note: sleep mode is not considered \"powering on\" the console. Sleep mode will still work as intended When completely discharged, your Switch will take a very long time to charge while in RCM. This means that you'll be waiting around an hour or two for the battery to fully recharge to even boot your console again. Advantages of AutoRCM AutoRCM can be used for good as well: If you were having trouble getting into RCM before, because for example you're using the tinfoil method, now you can get into RCM every time If you want to keep fuses unburned, you can do so with AutoRCM, as the Switch never gets the change to burn them after updating when using AutoRCM Easier to inject a payload using a payload injector If, despite all of the warnings above, you still want to install AutoRCM, and understand the risks, do the following: Boot Hekate Go to Tools At the bottom of the page, tap Archive bit - AutoRCM Then tap AutoRCM . It will show a little ON next to the option once you have done this","title":"AutoRCM"},{"location":"extras/blocking_updates/","text":"Blocking Updates You can add custom DNS to your WiFi connection that will block all communication with the Nintendo servers. This will stop any updates and reporting to Nintendo, but it will prevent use of the eShop and online games. We will be using 90DNS , a community-run custom DNS server. If you prefer, you can run your own DNS server following the instructions on the GitLab repository. Instructions Go to the Settings applet, and then to the Internet tab. Select the WiFi network you are connected to and click Change Settings . Change DNS Settings to Manual. Pick the Server that is the closest to your device out of the below chart and enter its Primary and Secondary DNS into your connection. Save Settings and test connection. Location Primary DNS Secondary DNS Europe (Server located in France) 163.172.141.219 207.246.121.77 America (Server located in the USA) 207.246.121.77 163.172.141.219 Example for a 90dns connection with the Europe settings: Testing if your 90dns connection is working Click to expand! Download the latest release of the 90dns Tester Place the Switch_90DNS_tester.nro in the switch folder on your SD Enter the homebrew menu and run the 90dns Tester After the test finished it should look similar to the below picture, with every nintendo domain being blocked","title":"Blocking Updates"},{"location":"extras/blocking_updates/#blocking-updates","text":"You can add custom DNS to your WiFi connection that will block all communication with the Nintendo servers. This will stop any updates and reporting to Nintendo, but it will prevent use of the eShop and online games. We will be using 90DNS , a community-run custom DNS server. If you prefer, you can run your own DNS server following the instructions on the GitLab repository.","title":"Blocking Updates"},{"location":"extras/blocking_updates/#instructions","text":"Go to the Settings applet, and then to the Internet tab. Select the WiFi network you are connected to and click Change Settings . Change DNS Settings to Manual. Pick the Server that is the closest to your device out of the below chart and enter its Primary and Secondary DNS into your connection. Save Settings and test connection. Location Primary DNS Secondary DNS Europe (Server located in France) 163.172.141.219 207.246.121.77 America (Server located in the USA) 207.246.121.77 163.172.141.219 Example for a 90dns connection with the Europe settings:","title":"Instructions"},{"location":"extras/blocking_updates/#testing-if-your-90dns-connection-is-working","text":"Click to expand! Download the latest release of the 90dns Tester Place the Switch_90DNS_tester.nro in the switch folder on your SD Enter the homebrew menu and run the 90dns Tester After the test finished it should look similar to the below picture, with every nintendo domain being blocked","title":"Testing if your 90dns connection is working"},{"location":"extras/dumping_title_keys/","text":"Dumping Title Keys This section is for dumping your games' title keys. Advanced users only! Title keys are meant for decrypting game dumps, usually for modding purposes. Most users won't need this. What you need The latest release of Lockpick_RCM in your /bootloader/payloads folder Instructions Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND or emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card.","title":"Dumping Title Keys"},{"location":"extras/dumping_title_keys/#dumping-title-keys","text":"This section is for dumping your games' title keys. Advanced users only! Title keys are meant for decrypting game dumps, usually for modding purposes. Most users won't need this.","title":"Dumping Title Keys"},{"location":"extras/dumping_title_keys/#what-you-need","text":"The latest release of Lockpick_RCM in your /bootloader/payloads folder","title":"What you need"},{"location":"extras/dumping_title_keys/#instructions","text":"Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND or emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card.","title":"Instructions"},{"location":"extras/game_modding/","text":"Game modding with LayeredFS LayeredFS, a tool built in to Atmosphere, allows you to replace game files with your own. Instructions Make a folder on your SD card inside the atmosphere/contents/ folder, with the name being the title ID of the game you would like to replace the files of. Note: On Atmosphere 0.9.4 and below contents is called titles Switch game title IDs can be found on http://nswdb.com/ . If you have a pre-made mod, the files would be placed here. Then, once the title is launched while in Atmosphere, your mod should load. Batman in BOTW","title":"Game Modding"},{"location":"extras/game_modding/#game-modding-with-layeredfs","text":"LayeredFS, a tool built in to Atmosphere, allows you to replace game files with your own.","title":"Game modding with LayeredFS"},{"location":"extras/game_modding/#instructions","text":"Make a folder on your SD card inside the atmosphere/contents/ folder, with the name being the title ID of the game you would like to replace the files of. Note: On Atmosphere 0.9.4 and below contents is called titles Switch game title IDs can be found on http://nswdb.com/ . If you have a pre-made mod, the files would be placed here. Then, once the title is launched while in Atmosphere, your mod should load. Batman in BOTW","title":"Instructions"},{"location":"extras/glossary/","text":"Glossary of common hacking terms This section is dedicated to explaining a number of common terms that are used when hacking the Nintendo Switch as well as linking a number of resources that can help fledgling developers or curious users. Hacking terms The following list is in alphabetical order. 90DNS: DNS that blocks system updates on the Nintendo Switch. Atmosphere: The CFW developed by the Atmosphere-NX organization on GitHub and the one used in this guide. AutoRCM: A method that corrupts parts of your boot0 and boot1, causing the Switch to boot into RCM automatically. Using this requires an additional peripheral (such as a computer, phone, dongle or trinket) to be able to boot your Switch. boot0 and boot1: Two partitions of the Switch NAND. CFW: Short for custom firmware. Custom firmware permits you to completely modify how your Switch works. Deja Vu: An unreleased exploit chain for the Nintendo Switch. The completely unpatched version of this chain will grant access to TrustZone, which effectively means being able to enter CFW. The TrustZone part of this exploit was patched in firmware version 5.0.0 and up, but normal homebrew access can still be gained up to firmware version 6.0.1. DNS: Domain Name System . Basically it's the internets addressbook. If you visit a website, the DNS is what tells you what server the site is hosted on. Dongle: Device you can plug in the charging port of your Switch to automatically send a payload if your Switch is in RCM. Encryption keys: Keys used to encrypt files from the Nintendo Switch. These can be dumped by following the guide here . BIS keys: Specific keys used to decrypt the NAND. fusee-gelee/ShofEL2: Two names for two different implementations of the same exploit. This is an exploit that grants full bootrom access to the Nintendo Switch from the Tegra X1s RCM and permits us to run CFW. This exploit requires an external device and a tiny hardware modification. fusee-gelee is developed by an ex-ReSwitched developer, while ShofEL2 is developed by the failoverfl0w team. This guide uses fusee-gelee. hactool: Software used to decrypt Nintendo Switch files like .XCI and .NSP files. Hekate: A bootloader for the Nintendo Switch. The current guide uses this in combination with essential files from Atmosphere to boot CFW. Homebrew: Unsigned code that can be ran on the Nintendo Switch. Examples of homebrew include save editors, emulators and ports of PC games, but can also include completely original games. To run this code, you need to have an exploit. Homebrew launcher: Software developed by the Switchbrew team that lets you run other Homebrew. Jig: Refers to a piece of hardware that you can put in the Joycon rail to enter RCM. KIP: Short for Kernel Initial Process. These files can be loaded in when the Switch boots in CFW and provide additional functionality. NAND: The internal filesystem used by the Switch. Contains boot0 and boot1, as well as PRODINFO and various other partitions. nx-hbloader: Intermediary program used to load the Homebrew Launcher from CFW developed by Switchbrew. Comes bundled with Atmosphere. PRODINFO: A partition on the NAND of your Switch. This along with boot0 and boot1 is the only part of your Switch that can render it unbootable if improperly modified. Atmosphere backs up this partition on booting and it is included in your NAND backup. ReSwitched: A hacking team that is one of the main developers for Atmosphere. RCM: A shorthand for \"Recovery Mode\". When talking about hacking the Switch, this commonly refers to the Recovery Mode in the Tegra X1 chip that is included in the Nintendo Switch. Can be entered by holding down the Tegra X1 home button. This button is not the same as the home button on the joycons. Ways of pressing this button can be found here . TegraRCMGUI/fusee-interface-gtk: Software used to run the fusee-gelee exploit on the Switch. Tegra X1: A chip made by Nvidia that is used in the Nintendo Switch. Trinket: A tiny chip that is soldered on the Switch motherboard to automatically send a payload if it is in RCM. TrustZone: The highest security level on the Switch. XCI/NSP: Format used to dump games to. XCI is used for gamecard dumps, while NSP is for dumping digital titles. Resources The resources below are for users and developers interested in developing Homebrew or for those that want to get a more technical understanding of the various concepts. The ReSwitched FAQ lists a general overview of how the Switch works. Switchbrew is a wiki detailing the inner workings of the Nintendo Switch's firmware. libNX documentation . LibNX is the library used to develop Homebrew on the Nintendo Switch.","title":"Glossary"},{"location":"extras/glossary/#glossary-of-common-hacking-terms","text":"This section is dedicated to explaining a number of common terms that are used when hacking the Nintendo Switch as well as linking a number of resources that can help fledgling developers or curious users.","title":"Glossary of common hacking terms"},{"location":"extras/glossary/#hacking-terms","text":"The following list is in alphabetical order. 90DNS: DNS that blocks system updates on the Nintendo Switch. Atmosphere: The CFW developed by the Atmosphere-NX organization on GitHub and the one used in this guide. AutoRCM: A method that corrupts parts of your boot0 and boot1, causing the Switch to boot into RCM automatically. Using this requires an additional peripheral (such as a computer, phone, dongle or trinket) to be able to boot your Switch. boot0 and boot1: Two partitions of the Switch NAND. CFW: Short for custom firmware. Custom firmware permits you to completely modify how your Switch works. Deja Vu: An unreleased exploit chain for the Nintendo Switch. The completely unpatched version of this chain will grant access to TrustZone, which effectively means being able to enter CFW. The TrustZone part of this exploit was patched in firmware version 5.0.0 and up, but normal homebrew access can still be gained up to firmware version 6.0.1. DNS: Domain Name System . Basically it's the internets addressbook. If you visit a website, the DNS is what tells you what server the site is hosted on. Dongle: Device you can plug in the charging port of your Switch to automatically send a payload if your Switch is in RCM. Encryption keys: Keys used to encrypt files from the Nintendo Switch. These can be dumped by following the guide here . BIS keys: Specific keys used to decrypt the NAND. fusee-gelee/ShofEL2: Two names for two different implementations of the same exploit. This is an exploit that grants full bootrom access to the Nintendo Switch from the Tegra X1s RCM and permits us to run CFW. This exploit requires an external device and a tiny hardware modification. fusee-gelee is developed by an ex-ReSwitched developer, while ShofEL2 is developed by the failoverfl0w team. This guide uses fusee-gelee. hactool: Software used to decrypt Nintendo Switch files like .XCI and .NSP files. Hekate: A bootloader for the Nintendo Switch. The current guide uses this in combination with essential files from Atmosphere to boot CFW. Homebrew: Unsigned code that can be ran on the Nintendo Switch. Examples of homebrew include save editors, emulators and ports of PC games, but can also include completely original games. To run this code, you need to have an exploit. Homebrew launcher: Software developed by the Switchbrew team that lets you run other Homebrew. Jig: Refers to a piece of hardware that you can put in the Joycon rail to enter RCM. KIP: Short for Kernel Initial Process. These files can be loaded in when the Switch boots in CFW and provide additional functionality. NAND: The internal filesystem used by the Switch. Contains boot0 and boot1, as well as PRODINFO and various other partitions. nx-hbloader: Intermediary program used to load the Homebrew Launcher from CFW developed by Switchbrew. Comes bundled with Atmosphere. PRODINFO: A partition on the NAND of your Switch. This along with boot0 and boot1 is the only part of your Switch that can render it unbootable if improperly modified. Atmosphere backs up this partition on booting and it is included in your NAND backup. ReSwitched: A hacking team that is one of the main developers for Atmosphere. RCM: A shorthand for \"Recovery Mode\". When talking about hacking the Switch, this commonly refers to the Recovery Mode in the Tegra X1 chip that is included in the Nintendo Switch. Can be entered by holding down the Tegra X1 home button. This button is not the same as the home button on the joycons. Ways of pressing this button can be found here . TegraRCMGUI/fusee-interface-gtk: Software used to run the fusee-gelee exploit on the Switch. Tegra X1: A chip made by Nvidia that is used in the Nintendo Switch. Trinket: A tiny chip that is soldered on the Switch motherboard to automatically send a payload if it is in RCM. TrustZone: The highest security level on the Switch. XCI/NSP: Format used to dump games to. XCI is used for gamecard dumps, while NSP is for dumping digital titles.","title":"Hacking terms"},{"location":"extras/glossary/#resources","text":"The resources below are for users and developers interested in developing Homebrew or for those that want to get a more technical understanding of the various concepts. The ReSwitched FAQ lists a general overview of how the Switch works. Switchbrew is a wiki detailing the inner workings of the Nintendo Switch's firmware. libNX documentation . LibNX is the library used to develop Homebrew on the Nintendo Switch.","title":"Resources"},{"location":"extras/nandrestore/","text":"Restore a NAND backup to the switch Warning: -This will reset all of your saves, games, system version and other system settings back to a point when you made the the nand backup. Keep this in mind, as you probably don't have to restore a nand backup unless you have bricked your switch or want to go back online safely after using cfw. -If you're going to restore an old NAND which will downgrade your firmware it's best to create a second NAND backup before restoring the first one in case something goes wrong. What you need: Your rawnand.bin (Combined or in 15 or 30 parts) Your BOOT0 and BOOT1 If you're missing any of the files above, ask for further help in the Nintendo Homebrew Discord server. The Hekate Payload A microSD card larger than 32gb Instructions: Before we start, check if you have a tree of folders called backup/[8 Character NAND id]/restore on your sd card. If you don't see a backup or [8 Character NAND id] folder on your sd card: This means you do not have a nand backup, it is highly reccomended you make one as soon as possible. Follow the steps below to make one. Launch the latest Hekate payload on your switch. Navigate to Tools > Backup eMMC > eMMC BOOT0 & BOOT1 and let it do its thing. Wait for the process to complete. When it's completed, you now have a backup/[8 Character NAND id]/restore folder on your sd card. Continue with step 1 of the guide. Copy your rawnand.bin (combined or in 15 or 30 parts, this can be done by using the joiner scripts on the hekate github release page), BOOT0 , and BOOT1 to the backup/[8 Character NAND id]/restore folder on the sd card. Put your sd card into your switch, and launch Hekate. Navigate to Tools > Restore eMMC . Select Restore eMMC BOOT0 & BOOT1 . Wait for this process to complete. In that same menu, select eMMC RAW GPP and wait for the process to complete. This will take a very long time to complete. If you're downgrading using your NAND backup If the security version you were on before you performed the NAND restore is HIGHER than the NAND backup itself, you have to enable autoRCM to not get stuck in a boot crash. A system update is considered a security version when a fuse is burned, you can check which versions burn fuses here . If you were in autorcm before you upgraded to a newer security version (and still were after the upgrade) you don't have to do this. In Hekate's main menu, navigate to Tools and go to the bottom of the page where you will find a button called Archive bit - AutoRCM Select the AutoRCM buttom and you will see ON written next to it. This means it is enabled.","title":"Restoring a NAND Backup"},{"location":"extras/nandrestore/#restore-a-nand-backup-to-the-switch","text":"Warning: -This will reset all of your saves, games, system version and other system settings back to a point when you made the the nand backup. Keep this in mind, as you probably don't have to restore a nand backup unless you have bricked your switch or want to go back online safely after using cfw. -If you're going to restore an old NAND which will downgrade your firmware it's best to create a second NAND backup before restoring the first one in case something goes wrong.","title":"Restore a NAND backup to the switch"},{"location":"extras/nandrestore/#what-you-need","text":"Your rawnand.bin (Combined or in 15 or 30 parts) Your BOOT0 and BOOT1 If you're missing any of the files above, ask for further help in the Nintendo Homebrew Discord server. The Hekate Payload A microSD card larger than 32gb","title":"What you need:"},{"location":"extras/nandrestore/#instructions","text":"Before we start, check if you have a tree of folders called backup/[8 Character NAND id]/restore on your sd card. If you don't see a backup or [8 Character NAND id] folder on your sd card: This means you do not have a nand backup, it is highly reccomended you make one as soon as possible. Follow the steps below to make one. Launch the latest Hekate payload on your switch. Navigate to Tools > Backup eMMC > eMMC BOOT0 & BOOT1 and let it do its thing. Wait for the process to complete. When it's completed, you now have a backup/[8 Character NAND id]/restore folder on your sd card. Continue with step 1 of the guide. Copy your rawnand.bin (combined or in 15 or 30 parts, this can be done by using the joiner scripts on the hekate github release page), BOOT0 , and BOOT1 to the backup/[8 Character NAND id]/restore folder on the sd card. Put your sd card into your switch, and launch Hekate. Navigate to Tools > Restore eMMC . Select Restore eMMC BOOT0 & BOOT1 . Wait for this process to complete. In that same menu, select eMMC RAW GPP and wait for the process to complete. This will take a very long time to complete. If you're downgrading using your NAND backup If the security version you were on before you performed the NAND restore is HIGHER than the NAND backup itself, you have to enable autoRCM to not get stuck in a boot crash. A system update is considered a security version when a fuse is burned, you can check which versions burn fuses here . If you were in autorcm before you upgraded to a newer security version (and still were after the upgrade) you don't have to do this. In Hekate's main menu, navigate to Tools and go to the bottom of the page where you will find a button called Archive bit - AutoRCM Select the AutoRCM buttom and you will see ON written next to it. This means it is enabled.","title":"Instructions:"},{"location":"extras/rcm_injectors/","text":"RCM Payload Injectors There are currently multiple RCM payload injectors available from multiple different companies and individuals. These devices remove the need to use a computer or smartphone when hacking an unpatched Switch. Each injector has its own advantages and disadvantages, listed below: Name Manufacturer RCM Jig Included? RCM Jig Storage? Standard Payload (.bin) Support? Payload on SD Support? Multi-Payload Support? Battery Life Recharge Time Price (USD) Misc Info AceNS (Old) Ace3DS Team \u2714\ufe0f \u274c \u2714\ufe0f \u274c \u2714\ufe0f N/A (Capacitors) 10 seconds ~~$18.00~~\u200b ( Discontinued ) Not Recommended: Overpriced clone of the RCMLoader Zero AceNS (New) Ace3DS Team \u2714\ufe0f \ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u2714\ufe0f 45mAh LiPo (~1000 injections) 1 hour $17.50 Not Recommended: Overpriced clone of the RCMLoader One AceNS Pro Ace3DS Team \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f ( Required ) \u274c 45mAh LiPo (~1000 injections) 1 hour $42.90 Not Recommended: Overpriced clone of the RCMLoader One with multiple features missing DragonInjector MatinatorX \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f ( Required ) \u2714\ufe0f 40mAh CR1612 (~4000 injections) Non-Rechargeable (Replacable) $30.00 Fits in the Switch's gamecard slot NS-Atmosphere Generic \u2714\ufe0f \u2714\ufe0f \u274c \u274c \u274c 150mAh LiPo (>1000 injections) >1 hour $13.15 Not Recommended: Unsafe jig, overly bulky, changing payload requires installing a program, lack of .bin support complicates usage R4S R4i-SDHC Team \u2714\ufe0f \u274c \u2714\ufe0f \u2714\ufe0f \u274c 120mAh LiPo (~1000 injections) 1 hour $19.99 RCMLoader Zero Xkit \u2714\ufe0f \u274c \u2714\ufe0f \u274c \ufe0f \u2714\ufe0f N/A (Capacitors) 10 seconds ~~$5.99~~\u200b ( Discontinued ) RCMLoader One Xkit \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u2714\ufe0f 45mAh LiPo (~1000 injections) 1 hour $9.99 SX Gear Team Xecuter \u2714\ufe0f \u274c \u274c \u2714\ufe0f ( Required ) \u274c N/A (Supercapacitors) 5-10 seconds $24.95 Not Recommended: Lack of .bin support complicates usage SX Pro Team Xecuter \u2714\ufe0f \u274c \u274c \u2714\ufe0f ( Required ) \u274c N/A (Supercapacitors) 5-10 seconds $49.99 Not Recommended: Lack of .bin support complicates usage","title":"RCM Payload Injectors Information"},{"location":"extras/rcm_injectors/#rcm-payload-injectors","text":"There are currently multiple RCM payload injectors available from multiple different companies and individuals. These devices remove the need to use a computer or smartphone when hacking an unpatched Switch. Each injector has its own advantages and disadvantages, listed below: Name Manufacturer RCM Jig Included? RCM Jig Storage? Standard Payload (.bin) Support? Payload on SD Support? Multi-Payload Support? Battery Life Recharge Time Price (USD) Misc Info AceNS (Old) Ace3DS Team \u2714\ufe0f \u274c \u2714\ufe0f \u274c \u2714\ufe0f N/A (Capacitors) 10 seconds ~~$18.00~~\u200b ( Discontinued ) Not Recommended: Overpriced clone of the RCMLoader Zero AceNS (New) Ace3DS Team \u2714\ufe0f \ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u2714\ufe0f 45mAh LiPo (~1000 injections) 1 hour $17.50 Not Recommended: Overpriced clone of the RCMLoader One AceNS Pro Ace3DS Team \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f ( Required ) \u274c 45mAh LiPo (~1000 injections) 1 hour $42.90 Not Recommended: Overpriced clone of the RCMLoader One with multiple features missing DragonInjector MatinatorX \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f ( Required ) \u2714\ufe0f 40mAh CR1612 (~4000 injections) Non-Rechargeable (Replacable) $30.00 Fits in the Switch's gamecard slot NS-Atmosphere Generic \u2714\ufe0f \u2714\ufe0f \u274c \u274c \u274c 150mAh LiPo (>1000 injections) >1 hour $13.15 Not Recommended: Unsafe jig, overly bulky, changing payload requires installing a program, lack of .bin support complicates usage R4S R4i-SDHC Team \u2714\ufe0f \u274c \u2714\ufe0f \u2714\ufe0f \u274c 120mAh LiPo (~1000 injections) 1 hour $19.99 RCMLoader Zero Xkit \u2714\ufe0f \u274c \u2714\ufe0f \u274c \ufe0f \u2714\ufe0f N/A (Capacitors) 10 seconds ~~$5.99~~\u200b ( Discontinued ) RCMLoader One Xkit \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u274c \u2714\ufe0f 45mAh LiPo (~1000 injections) 1 hour $9.99 SX Gear Team Xecuter \u2714\ufe0f \u274c \u274c \u2714\ufe0f ( Required ) \u274c N/A (Supercapacitors) 5-10 seconds $24.95 Not Recommended: Lack of .bin support complicates usage SX Pro Team Xecuter \u2714\ufe0f \u274c \u274c \u2714\ufe0f ( Required ) \u274c N/A (Supercapacitors) 5-10 seconds $49.99 Not Recommended: Lack of .bin support complicates usage","title":"RCM Payload Injectors"},{"location":"extras/save_management/","text":"Save Management For save management, Edizon is recommended. It can be used to back up and restore game saves to your SD card. It also has the ability to edit saves for extra items etc. It also has support for Atmosphere's cheat engine, providing an easy way to download new cheats, as well as toggle them on or off. Checkpoint is also a save manager. It can be used to back up and restore game saves to your SD card. It also has the ability to share save data over FTP and WiFi. Edizon Please read Edizon's homepage for information on how to use it. Checkpoint Please read Checkpoint's usage page for information on how to use it.","title":"Save Management"},{"location":"extras/save_management/#save-management","text":"For save management, Edizon is recommended. It can be used to back up and restore game saves to your SD card. It also has the ability to edit saves for extra items etc. It also has support for Atmosphere's cheat engine, providing an easy way to download new cheats, as well as toggle them on or off. Checkpoint is also a save manager. It can be used to back up and restore game saves to your SD card. It also has the ability to share save data over FTP and WiFi.","title":"Save Management"},{"location":"extras/save_management/#edizon","text":"Please read Edizon's homepage for information on how to use it.","title":"Edizon"},{"location":"extras/save_management/#checkpoint","text":"Please read Checkpoint's usage page for information on how to use it.","title":"Checkpoint"},{"location":"extras/showing_file_extensions/","text":"Showing File Name Extensions on Windows 10 By default, Microsoft Windows 10 does not show file extensions for known file types. This can result in problems when you need to rename files. Instructions Open a new File Explorer window. Switch to the View tab/ribbon. On this tab, if the \"File name extensions\" checkbox is blank, put a check/tick mark in it by clicking it.","title":"Showing File Name Extensions (Windows)"},{"location":"extras/showing_file_extensions/#showing-file-name-extensions-on-windows-10","text":"By default, Microsoft Windows 10 does not show file extensions for known file types. This can result in problems when you need to rename files.","title":"Showing File Name Extensions on Windows 10"},{"location":"extras/showing_file_extensions/#instructions","text":"Open a new File Explorer window. Switch to the View tab/ribbon. On this tab, if the \"File name extensions\" checkbox is blank, put a check/tick mark in it by clicking it.","title":"Instructions"},{"location":"extras/theming/","text":"Theming You can create unique styles and layouts for your Switch Home Menu. What to follow Follow the Making a theme section if you want to make a theme. Follow the Installing a theme section if you want to install a theme Follow the Installing a custom font sectio n if you want to install a custom font Making a theme (Windows) What you need The latest release of Switch Theme Injector You need to download the ReleaseVx.x.zip on the download page Making the theme Unzip ReleaseVx.x.zip to somewhere on your pc's drive. Open up the SwitchThemes.exe app. Navigate to NXTheme Builder . Select a Home menu part, A 720p image and a Layout patch. Click on Build NXTheme after selecting your home menu part, image and layout patch. Fill out the details in the window that pops up. After filling out this window and clicking ok, you will get asked where to save the NXTheme file. Save this file to a temporary folder. Repeat step 3 and 4 for every Home Menu part of the Switch you want to modify. Making a theme (Mac / Linux) Making the theme Make sure that the images you want to use are 1280x720 and in JPG! Navigate to . Exelix's Web Injector Select a Theme Target you want to edit. After this, click the Open an Image button and select your background image. Choose a theme name and an author name and optionally a different layout, then click build NxTheme. Your browser will prompt you to download a file. Save this file to a temporary folder. Repeat step 2 to 4 for every Home Menu part of the Switch you want to modify. Installing a theme Community Themes If you want to use community themes, for example from the r/NXThemes , you can follow the guide below to install a community provided nxtheme Homebrew app store If you want to use the homebrew app store for themes, you can simply install the theme you want via the appstore, and follow the instructions from step 2 onwards below. Copy the .nxtheme files to the themes folder on your sd card (It is recommended you put them into their own folders, e.g. /themes/awesome_theme/awesome.nxtheme). Create the themes folder on the root of your sd card if it does not exist. Boot Switch CFW, launch the Homebrew Menu and launch NXThemes Installer . Your theme files should be listed here. You can install them one by one. Reboot your switch to see the changes. Installing a custom font Put a font in the .ttf file format into the themes folder (It is recommended you put them into their own folders, e.g. /themes/cool_font/font.ttf). Boot Switch CFW, launch the Homebrew Menu and launch NXThemes Installer . Find your font and install it. Reboot your switch to see the changes. Troubleshooting: My Switch crashes on boot after I installed a theme!: You installed a bad theme. You can remove it by going into the /atmosphere/titles/0100000000001000/romfs/lyt and deleting every file in that folder. The NXTheme installer crashes when I launch it: This is probably due to the archive bit being set on either the app or the nxthemes. This is usually the result of copying files to an sd card via a Mac. If you are experiencing this issue, try resetting the archive bit via Hekate for all files.","title":"Theming"},{"location":"extras/theming/#theming","text":"You can create unique styles and layouts for your Switch Home Menu. What to follow Follow the Making a theme section if you want to make a theme. Follow the Installing a theme section if you want to install a theme Follow the Installing a custom font sectio n if you want to install a custom font","title":"Theming"},{"location":"extras/theming/#making-a-theme-windows","text":"","title":"Making a theme (Windows)"},{"location":"extras/theming/#what-you-need","text":"The latest release of Switch Theme Injector You need to download the ReleaseVx.x.zip on the download page","title":"What you need"},{"location":"extras/theming/#making-the-theme","text":"Unzip ReleaseVx.x.zip to somewhere on your pc's drive. Open up the SwitchThemes.exe app. Navigate to NXTheme Builder . Select a Home menu part, A 720p image and a Layout patch. Click on Build NXTheme after selecting your home menu part, image and layout patch. Fill out the details in the window that pops up. After filling out this window and clicking ok, you will get asked where to save the NXTheme file. Save this file to a temporary folder. Repeat step 3 and 4 for every Home Menu part of the Switch you want to modify.","title":"Making the theme"},{"location":"extras/theming/#making-a-theme-mac-linux","text":"","title":"Making a theme (Mac / Linux)"},{"location":"extras/theming/#making-the-theme_1","text":"Make sure that the images you want to use are 1280x720 and in JPG! Navigate to . Exelix's Web Injector Select a Theme Target you want to edit. After this, click the Open an Image button and select your background image. Choose a theme name and an author name and optionally a different layout, then click build NxTheme. Your browser will prompt you to download a file. Save this file to a temporary folder. Repeat step 2 to 4 for every Home Menu part of the Switch you want to modify.","title":"Making the theme"},{"location":"extras/theming/#installing-a-theme","text":"Community Themes If you want to use community themes, for example from the r/NXThemes , you can follow the guide below to install a community provided nxtheme Homebrew app store If you want to use the homebrew app store for themes, you can simply install the theme you want via the appstore, and follow the instructions from step 2 onwards below. Copy the .nxtheme files to the themes folder on your sd card (It is recommended you put them into their own folders, e.g. /themes/awesome_theme/awesome.nxtheme). Create the themes folder on the root of your sd card if it does not exist. Boot Switch CFW, launch the Homebrew Menu and launch NXThemes Installer . Your theme files should be listed here. You can install them one by one. Reboot your switch to see the changes.","title":"Installing a theme"},{"location":"extras/theming/#installing-a-custom-font","text":"Put a font in the .ttf file format into the themes folder (It is recommended you put them into their own folders, e.g. /themes/cool_font/font.ttf). Boot Switch CFW, launch the Homebrew Menu and launch NXThemes Installer . Find your font and install it. Reboot your switch to see the changes.","title":"Installing a custom font"},{"location":"extras/theming/#troubleshooting","text":"My Switch crashes on boot after I installed a theme!: You installed a bad theme. You can remove it by going into the /atmosphere/titles/0100000000001000/romfs/lyt and deleting every file in that folder. The NXTheme installer crashes when I launch it: This is probably due to the archive bit being set on either the app or the nxthemes. This is usually the result of copying files to an sd card via a Mac. If you are experiencing this issue, try resetting the archive bit via Hekate for all files.","title":"Troubleshooting:"},{"location":"extras/updating/","text":"Keeping your system up-to-date This page documents how you can keep your system up-to-date. After following our guide, your system will consist of three core elements that can be updated. Atmosphere, Hekate and your system firmware. Updating Atmosphere When updating Atmosphere always make sure to read the release notes . They may list important changes and modifications to your system. Manual method: SD card When a new version of Atmosphere releases, you can always update Atmosphere by following these steps: Turn off your Nintendo Switch and plug your SD card in your computer. Back up reboot_payload.bin from the atmosphere folder of your SD card to your computer. Download the latest release of Atmosphere (Download the atmosphere-(version).zip release of Atmosphere.) Copy the contents of the Atmosphere .zip file to the root of your SD card. If you are prompted to overwrite files, do so, except for the .ini files. If you do accidentally overwrite the .ini files, this is not an emergency but you will lose any changes you made to Atmospheres settings. Place your copy of reboot_payload.bin in the atmosphere folder. If you are prompted to overwrite files, do so. Put your SD card back in your Switch and launch CFW. Automated method: atmosphere-updater It is also possible to update Atmosphere and Hekate through a homebrew utility called atmosphere-updater . This utility should be installed if you followed our guide. If you did not install this utility, you can download it from here or from the homebrew appstore. Updating your Atmosphere and Hekate installation using atmosphere-updater: Always update Atmosphere and Hekate together when using atmosphere-updater! Otherwise your reboot_payload.bin will not correctly be preserved. Open the Homebrew menu Open Atmosphere-Updater . Select Update Hekate (for hekate / kosmos users) . Press A when prompted. When asked to update AMS and hekate, press A . When asked to overwrite Atmosphere ini files, press B . Wait for it to complete. Select Reboot (reboot to payload) . Press A . You can now select your launch option in Hekate. Updating Hekate When updating Hekate always make sure to read the release notes . They may list important changes and modifications to your system. Manual method: SD card When a new version of Hekate releases, you can always update by following these steps: Turn off your Nintendo Switch and plug your SD card in your computer. Download the latest version of Hekate (Download the hekate_ctcaer_(version).zip release of hekate). Copy the bootloader folder from the Hekate .zip file to the root of your SD card. If you are asked to overwrite or merge files while copying, say yes to merge/overwrite them. Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card. If you already have reboot_payload.bin in the atmosphere folder on your SD card, delete it. Rename Hekate's .bin file to reboot_payload.bin . Put your SD card back in your Switch and launch CFW. Automated method: atmosphere-updater It is also possible to update Atmosphere and Hekate through a homebrew utility called atmosphere-updater . This utility should be installed if you followed our guide. If you did not install this utility, you can download it from here or from the homebrew appstore. Updating your Atmosphere and Hekate installation using atmosphere-updater: Always update Atmosphere and Hekate together when using atmosphere-updater! Otherwise your reboot_payload.bin will not correctly be preserved. Open the Homebrew menu Open Atmosphere-Updater . Select Update Hekate (for hekate / kosmos users) . Press A when prompted. When asked to update AMS and hekate, press A . When asked to overwrite Atmosphere ini files, press B . Wait for it to complete. Select Reboot (reboot to payload) . Press A . You can now select your launch option in Hekate. Updating your firmware Always check before updating your system firmware if the latest version of Atmosphere as well as the latest version of Hekate support the firmware version you are updating towards. Currently the latest version supported by Atmosphere and Hekate are: 9.1.0 . In addition, updating to or past some firmwares update the gamecard firmware. Reference the table below for information about these. Updating from Updating towards Updates gamecard firmware Below 4.0.0 Below 4.0.0 No Below 4.0.0 4.0.0 or above Yes On or above 4.0.0, but below 9.0.0 At least 4.1.0 but below 9.0.0 No On or above 4.0.0, but below 9.0.0 9.0.0 or above Yes On or above 9.0.0 Latest supported Atmosphere & Hekate revision No If at least one of the versions you are updating towards also updates the gamecard firmware, you will not be able to downgrade below that version without making the gamecard slot unusable until you update. Atmosphere (and Hekate) come bundled with patches that automatically disable the gamecard slot if it is detected that the system has an older gamecard firmware that would be updated. If you boot into RCM on each boot (for example by using AutoRCM), this means that the gamecard slot will not be updated and you can downgrade below that version. If this happens, you will not be able to use the gamecard slot as long as you are on the newer firmware. Otherwise, you can safely update your system firmware through the system settings. About emuMMC sysMMC and emuMMC have separate system firmwares and need to be updated separately. If you keep your emuMMC offline, you will have to use a gamecard to update your system firmware, synchronize it with another Nintendo Switch or dump an updated firmware from your sysMMC. Updating emuMMC by dumping an updated firmware from your sysMMC Do you have an eMMC backup yet? Please do not start this guide without doing a RAW GPP and a BOOT 0/1 eMMC backup! You can learn how to make one here . Downgrading This guide is made for updating your emuMMC. It is not for downgrading. Downgrading at all, sysMMC or emuMMC, is not recommended and not worth it. Downgrading is also very dangerous and can lead to serious complications even when performed correctly. What you will need The latest release of TegraExplorer The latest release of ChoiDujourNX The latest release of Atmosphere ChoiDujourNX is not the same as ChoiDujour. Please make sure you download ChoiDujour NX ! Preparing your SD card Insert your microSD card into your computer. Make a folder inside your switch folder called system updates . Download TegraExplorer.bin and place it somewhere on your PC (A good idea is to put it where you keep all your switch payloads like Hekate). Copy ChoiDujourNX.nro to /switch/system updates from the ChoiDujourNX.zip file. Update Atmosphere and Hekate by using the above guides. If you haven't already, update the sysMMC to the latest firmware. Dumping your sysMMC firmware Make sure your sysMMC is up to date. If your sysMMC is not up-to-date, update it through the System Settings. Inject TegraExplorer.bin using TegraRCMGUI (Like you would with Hekate). Using the volume and power buttons, select Tools and then Dump Firmware . Wait about 1-2 minutes for the tool to dump your firmware. When the tool finishes, press any volume button. Select Exit and then Reboot to Hekate . Updating your emuMMC with ChoiDujourNX In Hekate go to Launch -> Atmosphere FSS0 Emu . Once booted, hold R while launching a game to boot into the homebrew launcher. Navigate to the system updates folder where you should see ChoiDujourNX, launch it. Once in ChoiDujourNX, navigate to tegraexplorer/Firmware/<latest firmware number> . In that folder you should see a large number of .nca files. Tap on Choose in the bottom right hand corner of the screen. When given the option, select your firmware that you have just dumped. If it is available, choose the update with (Exfat) . Tap Select firmware in the bottom right hand corner of the screen. Tap Start installation . Wait until ChoiDujourNX completes installing the dumped firmware. Once it completes, it will ask you if it can reboot. Tap Reboot . Once rebooted, launch into emuMMC and verify your system works. You can verify your system has been properly updated in Settings -> System on your emuMMC.","title":"Updating CFW"},{"location":"extras/updating/#keeping-your-system-up-to-date","text":"This page documents how you can keep your system up-to-date. After following our guide, your system will consist of three core elements that can be updated. Atmosphere, Hekate and your system firmware.","title":"Keeping your system up-to-date"},{"location":"extras/updating/#updating-atmosphere","text":"When updating Atmosphere always make sure to read the release notes . They may list important changes and modifications to your system.","title":"Updating Atmosphere"},{"location":"extras/updating/#manual-method-sd-card","text":"When a new version of Atmosphere releases, you can always update Atmosphere by following these steps: Turn off your Nintendo Switch and plug your SD card in your computer. Back up reboot_payload.bin from the atmosphere folder of your SD card to your computer. Download the latest release of Atmosphere (Download the atmosphere-(version).zip release of Atmosphere.) Copy the contents of the Atmosphere .zip file to the root of your SD card. If you are prompted to overwrite files, do so, except for the .ini files. If you do accidentally overwrite the .ini files, this is not an emergency but you will lose any changes you made to Atmospheres settings. Place your copy of reboot_payload.bin in the atmosphere folder. If you are prompted to overwrite files, do so. Put your SD card back in your Switch and launch CFW.","title":"Manual method: SD card"},{"location":"extras/updating/#automated-method-atmosphere-updater","text":"It is also possible to update Atmosphere and Hekate through a homebrew utility called atmosphere-updater . This utility should be installed if you followed our guide. If you did not install this utility, you can download it from here or from the homebrew appstore. Updating your Atmosphere and Hekate installation using atmosphere-updater: Always update Atmosphere and Hekate together when using atmosphere-updater! Otherwise your reboot_payload.bin will not correctly be preserved. Open the Homebrew menu Open Atmosphere-Updater . Select Update Hekate (for hekate / kosmos users) . Press A when prompted. When asked to update AMS and hekate, press A . When asked to overwrite Atmosphere ini files, press B . Wait for it to complete. Select Reboot (reboot to payload) . Press A . You can now select your launch option in Hekate.","title":"Automated method: atmosphere-updater"},{"location":"extras/updating/#updating-hekate","text":"When updating Hekate always make sure to read the release notes . They may list important changes and modifications to your system.","title":"Updating Hekate"},{"location":"extras/updating/#manual-method-sd-card_1","text":"When a new version of Hekate releases, you can always update by following these steps: Turn off your Nintendo Switch and plug your SD card in your computer. Download the latest version of Hekate (Download the hekate_ctcaer_(version).zip release of hekate). Copy the bootloader folder from the Hekate .zip file to the root of your SD card. If you are asked to overwrite or merge files while copying, say yes to merge/overwrite them. Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card. If you already have reboot_payload.bin in the atmosphere folder on your SD card, delete it. Rename Hekate's .bin file to reboot_payload.bin . Put your SD card back in your Switch and launch CFW.","title":"Manual method: SD card"},{"location":"extras/updating/#automated-method-atmosphere-updater_1","text":"It is also possible to update Atmosphere and Hekate through a homebrew utility called atmosphere-updater . This utility should be installed if you followed our guide. If you did not install this utility, you can download it from here or from the homebrew appstore. Updating your Atmosphere and Hekate installation using atmosphere-updater: Always update Atmosphere and Hekate together when using atmosphere-updater! Otherwise your reboot_payload.bin will not correctly be preserved. Open the Homebrew menu Open Atmosphere-Updater . Select Update Hekate (for hekate / kosmos users) . Press A when prompted. When asked to update AMS and hekate, press A . When asked to overwrite Atmosphere ini files, press B . Wait for it to complete. Select Reboot (reboot to payload) . Press A . You can now select your launch option in Hekate.","title":"Automated method: atmosphere-updater"},{"location":"extras/updating/#updating-your-firmware","text":"Always check before updating your system firmware if the latest version of Atmosphere as well as the latest version of Hekate support the firmware version you are updating towards. Currently the latest version supported by Atmosphere and Hekate are: 9.1.0 . In addition, updating to or past some firmwares update the gamecard firmware. Reference the table below for information about these. Updating from Updating towards Updates gamecard firmware Below 4.0.0 Below 4.0.0 No Below 4.0.0 4.0.0 or above Yes On or above 4.0.0, but below 9.0.0 At least 4.1.0 but below 9.0.0 No On or above 4.0.0, but below 9.0.0 9.0.0 or above Yes On or above 9.0.0 Latest supported Atmosphere & Hekate revision No If at least one of the versions you are updating towards also updates the gamecard firmware, you will not be able to downgrade below that version without making the gamecard slot unusable until you update. Atmosphere (and Hekate) come bundled with patches that automatically disable the gamecard slot if it is detected that the system has an older gamecard firmware that would be updated. If you boot into RCM on each boot (for example by using AutoRCM), this means that the gamecard slot will not be updated and you can downgrade below that version. If this happens, you will not be able to use the gamecard slot as long as you are on the newer firmware. Otherwise, you can safely update your system firmware through the system settings.","title":"Updating your firmware"},{"location":"extras/updating/#about-emummc","text":"sysMMC and emuMMC have separate system firmwares and need to be updated separately. If you keep your emuMMC offline, you will have to use a gamecard to update your system firmware, synchronize it with another Nintendo Switch or dump an updated firmware from your sysMMC.","title":"About emuMMC"},{"location":"extras/updating/#updating-emummc-by-dumping-an-updated-firmware-from-your-sysmmc","text":"Do you have an eMMC backup yet? Please do not start this guide without doing a RAW GPP and a BOOT 0/1 eMMC backup! You can learn how to make one here . Downgrading This guide is made for updating your emuMMC. It is not for downgrading. Downgrading at all, sysMMC or emuMMC, is not recommended and not worth it. Downgrading is also very dangerous and can lead to serious complications even when performed correctly.","title":"Updating emuMMC by dumping an updated firmware from your sysMMC"},{"location":"extras/updating/#what-you-will-need","text":"The latest release of TegraExplorer The latest release of ChoiDujourNX The latest release of Atmosphere ChoiDujourNX is not the same as ChoiDujour. Please make sure you download ChoiDujour NX !","title":"What you will need"},{"location":"extras/updating/#preparing-your-sd-card","text":"Insert your microSD card into your computer. Make a folder inside your switch folder called system updates . Download TegraExplorer.bin and place it somewhere on your PC (A good idea is to put it where you keep all your switch payloads like Hekate). Copy ChoiDujourNX.nro to /switch/system updates from the ChoiDujourNX.zip file. Update Atmosphere and Hekate by using the above guides. If you haven't already, update the sysMMC to the latest firmware.","title":"Preparing your SD card"},{"location":"extras/updating/#dumping-your-sysmmc-firmware","text":"Make sure your sysMMC is up to date. If your sysMMC is not up-to-date, update it through the System Settings. Inject TegraExplorer.bin using TegraRCMGUI (Like you would with Hekate). Using the volume and power buttons, select Tools and then Dump Firmware . Wait about 1-2 minutes for the tool to dump your firmware. When the tool finishes, press any volume button. Select Exit and then Reboot to Hekate .","title":"Dumping your sysMMC firmware"},{"location":"extras/updating/#updating-your-emummc-with-choidujournx","text":"In Hekate go to Launch -> Atmosphere FSS0 Emu . Once booted, hold R while launching a game to boot into the homebrew launcher. Navigate to the system updates folder where you should see ChoiDujourNX, launch it. Once in ChoiDujourNX, navigate to tegraexplorer/Firmware/<latest firmware number> . In that folder you should see a large number of .nca files. Tap on Choose in the bottom right hand corner of the screen. When given the option, select your firmware that you have just dumped. If it is available, choose the update with (Exfat) . Tap Select firmware in the bottom right hand corner of the screen. Tap Start installation . Wait until ChoiDujourNX completes installing the dumped firmware. Once it completes, it will ask you if it can reboot. Tap Reboot . Once rebooted, launch into emuMMC and verify your system works. You can verify your system has been properly updated in Settings -> System on your emuMMC.","title":"Updating your emuMMC with ChoiDujourNX"},{"location":"user_guide/getting_started/","text":"Getting Started Finding your serial number The first thing to do is determine if your Switch is vulnerable to fusee-gelee, the exploit we will be using to launch CFW. This vulnerability was independently discovered by several different Switch hacking teams, and multiple variants of it were released to the public in April 2018 after a 90-day disclosure period ended. Nintendo and NVIDIA were made aware of the issue before the public release as a result, and Switch systems that are not vulnerable to the exploit started being spotted in the wild in July 2018. NVIDIA publicly acknowledged the flaw in April as well. In July 2019, Nintendo announced updated consoles, a handheld variant of the Switch called the Switch Lite (HOH-001), and a new model of original Switch (HAC-001-01) with better battery life. Both of these new models use a new processor called the T210b01 (also known as T214 and Mariko) with a new bootROM, and are not hackable at the current time. Patched and Mariko units can be identified by their serial number. This number can be found on the bottom of your Switch adjacent to the USB-C port, or in the Settings applet at System -> Serial Information . Determining if your Switch is vulnerable The homebrew community has crowdsourced a list of known serial numbers which are vulnerable to fusee-gelee. If your serial number is on this list as \"potentially patched\", follow the guide and see if your system works. If your serial number is listed as \"patched\", there is nothing you can do at this time. If your system is patched, it is highly advised to keep it on 7.0.1 or lower, if possible, as there may be a vulnerability for these versions in the far future. DO NOT update patched consoles past 7.0.1 if you want to ever have a chance of running homebrew and/or CFW on them. Notice If you are unsure if your serial is patched, you can test your console yourself following the instructions here. Serial list The following information is based on this GBATemp thread . Serial Numbers Unpatched Potentially patched Patched XAW1 XAW10000000000 to XAW10074000000 XAW10074000000 to XAW10120000000 XAW10120000000 and up XAW4 XAW40000000000 to XAW40011000000 XAW40011000000 to XAW40012000000 XAW40012000000 and up XAW7 XAW70000000000 to XAW70017800000 XAW70017800000 to XAW70030000000 XAW70030000000 and up XAJ1 XAJ10000000000 to XAJ10020000000 XAJ10020000000 to XAJ10030000000 XAJ10030000000 and up XAJ4 XAJ40000000000 to XAJ40046000000 XAJ40046000000 to XAJ40060000000 XAJ40060000000 and up XAJ7 XAJ70000000000 to XAJ70040000000 XAJ70040000000 to XAJ70050000000 XAJ70050000000 and up XKW1 N/A N/A XKW10000000000 and up XKJ1 N/A N/A XKJ10000000000 and up XJW1 N/A N/A XJW01000000000 and up XWW1 N/A N/A XWW01000000000 and up Console Preparation Important Before setting up the console for homebrew, it is important to have at least one eShop game (such as Onigiri ), application (such as YouTube or Hulu ), or a game demo such as 10 Second Run RETURNS . Running homebrew through any game cartridge will also work, but it must be inserted. Running homebrew does not permanently replace or remove the game/application, nor does it become tied to only one game/application (any cartridge you have inserted or any game/application installed can always be used). Once you have any game or application, you are prepared to continue on with the guide. Version Table Note Nereba and Caffeine how-to guides are currently a Work-In-Progress (WIP)! Note While the \"New\" Switch (HAC-001-01)'s earliest possible firmware is 7.0.1, it is not vulnerable to d\u00e9j\u00e0 vu , the exploit used by Nereba and Caffeine, because of hardware differences from the \"Old\" Switch (HAC-001). Firmware Version Unpatched Switches (HAC-001) Patched Switches (HAC-001) \"New\" Switch (HAC-001-01) Switch Lite (HDH-001) 1.0.0 Nereba or RCM N/A N/A N/A 2.0.0 - 3.0.2 Caffeine or RCM N/A N/A N/A 4.0.0 - 4.1.0 Caffeine or RCM Caffeine N/A N/A 5.0.0 - 7.0.0 RCM Wait for CFW N/A N/A 7.0.1 RCM Wait for CFW Cart update to 8.0.1 N/A 8.0.1 RCM Wait for homebrew Wait for homebrew Wait for homebrew 8.1.0 - 9.1.0 RCM Unhackable (currently) Unhackable (currently) Unhackable (currently) If your Switch is not patched, continue to RCM","title":"Getting Started"},{"location":"user_guide/getting_started/#getting-started","text":"","title":"Getting Started"},{"location":"user_guide/getting_started/#finding-your-serial-number","text":"The first thing to do is determine if your Switch is vulnerable to fusee-gelee, the exploit we will be using to launch CFW. This vulnerability was independently discovered by several different Switch hacking teams, and multiple variants of it were released to the public in April 2018 after a 90-day disclosure period ended. Nintendo and NVIDIA were made aware of the issue before the public release as a result, and Switch systems that are not vulnerable to the exploit started being spotted in the wild in July 2018. NVIDIA publicly acknowledged the flaw in April as well. In July 2019, Nintendo announced updated consoles, a handheld variant of the Switch called the Switch Lite (HOH-001), and a new model of original Switch (HAC-001-01) with better battery life. Both of these new models use a new processor called the T210b01 (also known as T214 and Mariko) with a new bootROM, and are not hackable at the current time. Patched and Mariko units can be identified by their serial number. This number can be found on the bottom of your Switch adjacent to the USB-C port, or in the Settings applet at System -> Serial Information .","title":"Finding your serial number"},{"location":"user_guide/getting_started/#determining-if-your-switch-is-vulnerable","text":"The homebrew community has crowdsourced a list of known serial numbers which are vulnerable to fusee-gelee. If your serial number is on this list as \"potentially patched\", follow the guide and see if your system works. If your serial number is listed as \"patched\", there is nothing you can do at this time. If your system is patched, it is highly advised to keep it on 7.0.1 or lower, if possible, as there may be a vulnerability for these versions in the far future. DO NOT update patched consoles past 7.0.1 if you want to ever have a chance of running homebrew and/or CFW on them. Notice If you are unsure if your serial is patched, you can test your console yourself following the instructions here.","title":"Determining if your Switch is vulnerable"},{"location":"user_guide/getting_started/#serial-list","text":"The following information is based on this GBATemp thread . Serial Numbers Unpatched Potentially patched Patched XAW1 XAW10000000000 to XAW10074000000 XAW10074000000 to XAW10120000000 XAW10120000000 and up XAW4 XAW40000000000 to XAW40011000000 XAW40011000000 to XAW40012000000 XAW40012000000 and up XAW7 XAW70000000000 to XAW70017800000 XAW70017800000 to XAW70030000000 XAW70030000000 and up XAJ1 XAJ10000000000 to XAJ10020000000 XAJ10020000000 to XAJ10030000000 XAJ10030000000 and up XAJ4 XAJ40000000000 to XAJ40046000000 XAJ40046000000 to XAJ40060000000 XAJ40060000000 and up XAJ7 XAJ70000000000 to XAJ70040000000 XAJ70040000000 to XAJ70050000000 XAJ70050000000 and up XKW1 N/A N/A XKW10000000000 and up XKJ1 N/A N/A XKJ10000000000 and up XJW1 N/A N/A XJW01000000000 and up XWW1 N/A N/A XWW01000000000 and up","title":"Serial list"},{"location":"user_guide/getting_started/#console-preparation","text":"Important Before setting up the console for homebrew, it is important to have at least one eShop game (such as Onigiri ), application (such as YouTube or Hulu ), or a game demo such as 10 Second Run RETURNS . Running homebrew through any game cartridge will also work, but it must be inserted. Running homebrew does not permanently replace or remove the game/application, nor does it become tied to only one game/application (any cartridge you have inserted or any game/application installed can always be used). Once you have any game or application, you are prepared to continue on with the guide.","title":"Console Preparation"},{"location":"user_guide/getting_started/#version-table","text":"Note Nereba and Caffeine how-to guides are currently a Work-In-Progress (WIP)! Note While the \"New\" Switch (HAC-001-01)'s earliest possible firmware is 7.0.1, it is not vulnerable to d\u00e9j\u00e0 vu , the exploit used by Nereba and Caffeine, because of hardware differences from the \"Old\" Switch (HAC-001). Firmware Version Unpatched Switches (HAC-001) Patched Switches (HAC-001) \"New\" Switch (HAC-001-01) Switch Lite (HDH-001) 1.0.0 Nereba or RCM N/A N/A N/A 2.0.0 - 3.0.2 Caffeine or RCM N/A N/A N/A 4.0.0 - 4.1.0 Caffeine or RCM Caffeine N/A N/A 5.0.0 - 7.0.0 RCM Wait for CFW N/A N/A 7.0.1 RCM Wait for CFW Cart update to 8.0.1 N/A 8.0.1 RCM Wait for homebrew Wait for homebrew Wait for homebrew 8.1.0 - 9.1.0 RCM Unhackable (currently) Unhackable (currently) Unhackable (currently)","title":"Version Table"},{"location":"user_guide/getting_started/#if-your-switch-is-not-patched-continue-to-rcm","text":"","title":"If your Switch is not patched, continue to RCM "},{"location":"user_guide/rcm/","text":"RCM RCM (short for ReCovery Mode) is a mode for the switch that allows nintendo to send the switch commands to do various things. People found out that on unpatched switches, you could send a payload, and then quickly copy it into the memory buffer behind the stack, overflowing the memory buffer into the stack, meaning you smash the stack and get full access to everything on the system. We use it here to launch atmosphere. emuNAND vs emuMMC vs sysNAND sysNAND stands for System NAND, meaning the internal storage in your actual Switch. emuNAND stands for emulated NAND, this means that your entire NAND (system memory) will run off your microSD card with Custom Firmware (CFW). This NAND's contents (games, applications, saves, etc.) are completely separate from your sysNAND. emuMMC is the name for the currently used implementation of emuNAND on Switch. It has no difference from emuNAND besides name. emuNAND CFW ( Recommended ) What's needed for emuNAND A microSD card that's 64GB or larger Pros of using emuNAND over sysNAND CFW: Installing game cartridge dumps without \"dirtying\" sysNAND, allowing sysNAND to be used online without ban risk. Allowing users on patched Switches using Caffeine to update their emuNAND to latest and use it online, keeping sysNAND at a lower vulnerable version. Continue to Entering RCM sysNAND CFW ( Not Recommended ) This is for the people who don't have an 64GB microSD card or larger, or who don't want emuNAND for whatever reason. Note If you set up an emuNAND you may still have CFW on your sysNAND if you choose to use it. You do not have to follow the guide linked below; all the files are the same, you simply select \"sysNAND CFW\" from Hekate/Nyx. Continue to SD preparations (sysNAND CFW) ( Not Recommended )","title":"RCM"},{"location":"user_guide/rcm/#rcm","text":"RCM (short for ReCovery Mode) is a mode for the switch that allows nintendo to send the switch commands to do various things. People found out that on unpatched switches, you could send a payload, and then quickly copy it into the memory buffer behind the stack, overflowing the memory buffer into the stack, meaning you smash the stack and get full access to everything on the system. We use it here to launch atmosphere. emuNAND vs emuMMC vs sysNAND sysNAND stands for System NAND, meaning the internal storage in your actual Switch. emuNAND stands for emulated NAND, this means that your entire NAND (system memory) will run off your microSD card with Custom Firmware (CFW). This NAND's contents (games, applications, saves, etc.) are completely separate from your sysNAND. emuMMC is the name for the currently used implementation of emuNAND on Switch. It has no difference from emuNAND besides name.","title":"RCM"},{"location":"user_guide/rcm/#emunand-cfw-recommended","text":"What's needed for emuNAND A microSD card that's 64GB or larger","title":"emuNAND CFW (Recommended)"},{"location":"user_guide/rcm/#pros-of-using-emunand-over-sysnand-cfw","text":"Installing game cartridge dumps without \"dirtying\" sysNAND, allowing sysNAND to be used online without ban risk. Allowing users on patched Switches using Caffeine to update their emuNAND to latest and use it online, keeping sysNAND at a lower vulnerable version.","title":"Pros of using emuNAND over sysNAND CFW:"},{"location":"user_guide/rcm/#continue-to-entering-rcm","text":"","title":"Continue to Entering RCM "},{"location":"user_guide/rcm/#sysnand-cfw-not-recommended","text":"This is for the people who don't have an 64GB microSD card or larger, or who don't want emuNAND for whatever reason. Note If you set up an emuNAND you may still have CFW on your sysNAND if you choose to use it. You do not have to follow the guide linked below; all the files are the same, you simply select \"sysNAND CFW\" from Hekate/Nyx.","title":"sysNAND CFW (Not Recommended)"},{"location":"user_guide/rcm/#continue-to-sd-preparations-sysnand-cfw-not-recommended","text":"","title":"Continue to SD preparations (sysNAND CFW) (Not Recommended) "},{"location":"user_guide/emummc/entering_rcm/","text":"Entering RCM As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not possible to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom. Instructions Power off the Switch and use one of the methods listed below to short the pins on the right joycon rail. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again. Otherwise, if your console did not turn on normally, and the screen remained black with no backlight, your Switch is in RCM. RCM Jig (Easiest for beginners) Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins (10 and a ground) are shorted every time. Jigs range in price, with the ones we recommend being $5. They're slightly more expensive than some mass produced jigs, however we can guarantee their quality. Also spending $5 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig. In the case you plan to make you own jig, this image lays out the pads numbers on the console. Make sure your jig NEVER touches pin 4. Pin 4 provides 5v power to the Joycons, if connected to any other pin you will fry the console. Soldered Joy-Con Pads - Physical RCM Button (Safest) Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This method comes to us from the mind of pbanj#9188 on Discord. All pictures of this method in action were provided by him, with some supplementary images provided by eip \u221e#3283 on Discord. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however you will be soldering wires to pins 7 and 10 (shown below) and wiring them to the \"Joycon release button\" at the top back of the right hand Joycon. In order to start this method you will want to take two lengths of wire, and wrap one end of each into a small circle. You will then want to take the circular end of one of the wires and add a small amount of solder, keeping it mostly flat (ONLY DO THIS TO ONE OF THE WIRES!). You will then glue this wire down to the below point on the Joycon release button. Make sure glue doesn't cover the top of the solder/wire as it will act as a contact point. Also, ensure that you leave enough space for the button to function correctly. Try pushing the button from the outside and observing its travel path so that you can see where and how you should safely glue the solder glob. The first wire should now be in place as seen by the green circle below. The second wire does not need any solder, instead you will hold it in place using the screw as shown by the red circle in the picture below. Pressing the Joycon button in you should now notice the solder point you created making contact with the piece of metal held in by the screw. Once you have these elements in place you want to connect one wire to pad 7 and the other to pad 10 (it doesn't matter which is which). After that you have successfully created an RCM button on your Joycon. You will now need to hold down the Joycon release button when attempting to boot RCM. Soldered Joy-Con Pads - 7 & 10 Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pins 7 and 10 (shown below) together with a surface-mount 0805 10k resistor. Apart from using a physical switch/button, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server. Soldered Joy-Con Pads - 9 & 10 Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pads 9 and 10 (seen below) together. This can either be done using a small wire, or directly bridging the pads with solder. Here is an example from YyAoMmIi#3705 on our Discord server. Bent Joy-Con Pins (Not recommended) Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 and 10 (shown below) slightly up and towards each other so they touch, shorting them. Here is an example from Sonlen#1414 on our Discord server. Continue to Sending a Payload","title":"Entering RCM"},{"location":"user_guide/emummc/entering_rcm/#entering-rcm","text":"As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not possible to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom.","title":"Entering RCM"},{"location":"user_guide/emummc/entering_rcm/#instructions","text":"Power off the Switch and use one of the methods listed below to short the pins on the right joycon rail. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again. Otherwise, if your console did not turn on normally, and the screen remained black with no backlight, your Switch is in RCM.","title":"Instructions"},{"location":"user_guide/emummc/entering_rcm/#rcm-jig-easiest-for-beginners","text":"Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins (10 and a ground) are shorted every time. Jigs range in price, with the ones we recommend being $5. They're slightly more expensive than some mass produced jigs, however we can guarantee their quality. Also spending $5 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig. In the case you plan to make you own jig, this image lays out the pads numbers on the console. Make sure your jig NEVER touches pin 4. Pin 4 provides 5v power to the Joycons, if connected to any other pin you will fry the console.","title":"RCM Jig (Easiest for beginners)"},{"location":"user_guide/emummc/entering_rcm/#soldered-joy-con-pads-physical-rcm-button-safest","text":"Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This method comes to us from the mind of pbanj#9188 on Discord. All pictures of this method in action were provided by him, with some supplementary images provided by eip \u221e#3283 on Discord. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however you will be soldering wires to pins 7 and 10 (shown below) and wiring them to the \"Joycon release button\" at the top back of the right hand Joycon. In order to start this method you will want to take two lengths of wire, and wrap one end of each into a small circle. You will then want to take the circular end of one of the wires and add a small amount of solder, keeping it mostly flat (ONLY DO THIS TO ONE OF THE WIRES!). You will then glue this wire down to the below point on the Joycon release button. Make sure glue doesn't cover the top of the solder/wire as it will act as a contact point. Also, ensure that you leave enough space for the button to function correctly. Try pushing the button from the outside and observing its travel path so that you can see where and how you should safely glue the solder glob. The first wire should now be in place as seen by the green circle below. The second wire does not need any solder, instead you will hold it in place using the screw as shown by the red circle in the picture below. Pressing the Joycon button in you should now notice the solder point you created making contact with the piece of metal held in by the screw. Once you have these elements in place you want to connect one wire to pad 7 and the other to pad 10 (it doesn't matter which is which). After that you have successfully created an RCM button on your Joycon. You will now need to hold down the Joycon release button when attempting to boot RCM.","title":"Soldered Joy-Con Pads - Physical RCM Button (Safest)"},{"location":"user_guide/emummc/entering_rcm/#soldered-joy-con-pads-7-10","text":"Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pins 7 and 10 (shown below) together with a surface-mount 0805 10k resistor. Apart from using a physical switch/button, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server.","title":"Soldered Joy-Con Pads - 7 &amp; 10"},{"location":"user_guide/emummc/entering_rcm/#soldered-joy-con-pads-9-10","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pads 9 and 10 (seen below) together. This can either be done using a small wire, or directly bridging the pads with solder. Here is an example from YyAoMmIi#3705 on our Discord server.","title":"Soldered Joy-Con Pads - 9 &amp; 10"},{"location":"user_guide/emummc/entering_rcm/#bent-joy-con-pins-not-recommended","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 and 10 (shown below) slightly up and towards each other so they touch, shorting them. Here is an example from Sonlen#1414 on our Discord server.","title":"Bent Joy-Con Pins (Not recommended)"},{"location":"user_guide/emummc/entering_rcm/#continue-to-sending-a-payload","text":"","title":"Continue to Sending a Payload "},{"location":"user_guide/emummc/launching_cfw/","text":"Launching CFW Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch completely loses power for any reason (shutting down, battery dying, etc.), CFW will no longer be active and you will need to follow these instructions again. Keep emuMMC offline at all times You should keep your emuMMC(emunand) offline (or with 90dns) at all times. Not doing this will likely result in a ban Instructions Power on your Switch into RCM, and inject the Hekate payload Navigate to Launch using the touch screen Find Atmosphere FSS0 EmuMMC and launch it Your Switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number, as well as an E at the end, indicating you are booted into emuMMC. Launching the Homebrew Menu You will now be able to launch the Homebrew Menu by opening the album or by holding the R button while launching any game (including demos/cartridges), application (e.g. Youtube/Hulu). If R is not held, the game or application will launch like normal. A note about using the album for the Homebrew Menu Using the album for the Homebrew Menu instead of a game or application has several limitations, including but not limited to: a smaller amount of available memory (RAM), as well as being unable to launch a full-featured web browser. It is strongly recommended to launch homebrew through applications or games instead. If your games don't show up as \"installed\" on your switch, copy the contents of the Nintendo folder from the root of the sd card to the emummc/RAW1/Nintendo folder Adding new applications Place homebrew applications ( .nro files) into the switch folder on your SD card. What the included homebrew applications do EdiZon is a save manager, it can dump and restore saves from/to your system. For more information, see Save Management FTPD is a ftp tool for connecting your Switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the Switch. You can move files, listen to mp3's, view images etc. NXThemeInstaller is a theme installer app. See the Theming section of our guide for more information hbappstore is a homebrew app store where a large collection of switch homebrew is kept. atmosphere-updater is a homebrew app capable of updating Atmosphere. See this page for information on keeping your system up to date.","title":"Launching CFW"},{"location":"user_guide/emummc/launching_cfw/#launching-cfw","text":"Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch completely loses power for any reason (shutting down, battery dying, etc.), CFW will no longer be active and you will need to follow these instructions again. Keep emuMMC offline at all times You should keep your emuMMC(emunand) offline (or with 90dns) at all times. Not doing this will likely result in a ban","title":"Launching CFW"},{"location":"user_guide/emummc/launching_cfw/#instructions","text":"Power on your Switch into RCM, and inject the Hekate payload Navigate to Launch using the touch screen Find Atmosphere FSS0 EmuMMC and launch it Your Switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number, as well as an E at the end, indicating you are booted into emuMMC.","title":"Instructions"},{"location":"user_guide/emummc/launching_cfw/#launching-the-homebrew-menu","text":"You will now be able to launch the Homebrew Menu by opening the album or by holding the R button while launching any game (including demos/cartridges), application (e.g. Youtube/Hulu). If R is not held, the game or application will launch like normal. A note about using the album for the Homebrew Menu Using the album for the Homebrew Menu instead of a game or application has several limitations, including but not limited to: a smaller amount of available memory (RAM), as well as being unable to launch a full-featured web browser. It is strongly recommended to launch homebrew through applications or games instead. If your games don't show up as \"installed\" on your switch, copy the contents of the Nintendo folder from the root of the sd card to the emummc/RAW1/Nintendo folder Adding new applications Place homebrew applications ( .nro files) into the switch folder on your SD card.","title":"Launching the Homebrew Menu"},{"location":"user_guide/emummc/launching_cfw/#what-the-included-homebrew-applications-do","text":"EdiZon is a save manager, it can dump and restore saves from/to your system. For more information, see Save Management FTPD is a ftp tool for connecting your Switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the Switch. You can move files, listen to mp3's, view images etc. NXThemeInstaller is a theme installer app. See the Theming section of our guide for more information hbappstore is a homebrew app store where a large collection of switch homebrew is kept. atmosphere-updater is a homebrew app capable of updating Atmosphere. See this page for information on keeping your system up to date.","title":"What the included homebrew applications do"},{"location":"user_guide/emummc/linux_partitioning/","text":"Manual Linux Preperations SD card identification Make 100% sure you get your microSD card during the following steps. If you are not careful, you can end up wiping your entire linux filesystem. We are not responsible for data loss when doing this. Who is this for? This section is for the people who do not want to let a tool automatically modify their sd, and want to do it manually for more control over what gets created. This section helps with that What you will need (Linux) The latest version of gparted The latest version of fdisk Access to an administrator account. Manual instructions (Linux) Open a terminal. Run sudo fdisk -l . Enter your password if prompted. This will print information about all drives connected to your computer. Use the information about the file size to identify your microSD card. Specifically, take note of the line after Disk . This will look something like /dev/xxx , where xxx will differ on your system (can also be longer than three characters). It does NOT end with a number. Run sudo gparted <value> . Enter your password if prompted. Replace <value> in the command with the information you obtained from step 2. You will see a list of partitions on your SD card. Go to Device -> Create partition table . Select msdos as the partition type and select Apply. This will remove all existing partitions from your SD card. Go to Partition -> New . And do the following: Set Free space following (MiB) to 30000 . Set Free space preceding (MiB) to 1 . Set File system to fat32 . Set the Label to sMicroSD . Leave everything else untouched and select Add . At the top part of gparted, you will now see a large gray space to the right. Right click this space, select New . Set File system to linux-swap . Set Label to emuMMC . Leave everything else untouched and select Add . Click the check icon in the toolbar. Wait for all operations to succeed. This might take a while. Close gparted . NOFAT error in Hekate This error might occur after preforming the previous steps if you are using a 64GB microSD. The reason for this is that Hekate expects the FAT32 partition to use a 32k cluster size, which gparted only does by default if the partition is larger than 32GB, which it likely won't be on a 64GB microSD. This will wipe all the data on your FAT32 partition . To fix this, follow these instructions: Open a terminal. Run sudo fdisk -l . Enter your password if prompted. This will print information about all drives connected to your computer. Use this information to determine the FAT32 partition on your SD card. Specifically, note the value under the column Device . This will look something like /dev/xxx , where xxx will differ on your system (can also be longer than three characters). It always ends with a number! Run sudo mkdosfs <value> -s 64 -F 32 -I . Enter your password if prompted. Replace <value> with the value you got from step 2. Wait until it finishes running. Depending on the size of your microSD card, this might take a while. Run sudo fatlabel <value> \"sMicroSD\" . Enter your password if prompted. Replace <value> with the value you got from step 2. Continue to SD Preparations","title":"Linux partitioning"},{"location":"user_guide/emummc/linux_partitioning/#manual-linux-preperations","text":"SD card identification Make 100% sure you get your microSD card during the following steps. If you are not careful, you can end up wiping your entire linux filesystem. We are not responsible for data loss when doing this. Who is this for? This section is for the people who do not want to let a tool automatically modify their sd, and want to do it manually for more control over what gets created. This section helps with that What you will need (Linux) The latest version of gparted The latest version of fdisk Access to an administrator account.","title":"Manual Linux Preperations"},{"location":"user_guide/emummc/linux_partitioning/#manual-instructions-linux","text":"Open a terminal. Run sudo fdisk -l . Enter your password if prompted. This will print information about all drives connected to your computer. Use the information about the file size to identify your microSD card. Specifically, take note of the line after Disk . This will look something like /dev/xxx , where xxx will differ on your system (can also be longer than three characters). It does NOT end with a number. Run sudo gparted <value> . Enter your password if prompted. Replace <value> in the command with the information you obtained from step 2. You will see a list of partitions on your SD card. Go to Device -> Create partition table . Select msdos as the partition type and select Apply. This will remove all existing partitions from your SD card. Go to Partition -> New . And do the following: Set Free space following (MiB) to 30000 . Set Free space preceding (MiB) to 1 . Set File system to fat32 . Set the Label to sMicroSD . Leave everything else untouched and select Add . At the top part of gparted, you will now see a large gray space to the right. Right click this space, select New . Set File system to linux-swap . Set Label to emuMMC . Leave everything else untouched and select Add . Click the check icon in the toolbar. Wait for all operations to succeed. This might take a while. Close gparted . NOFAT error in Hekate This error might occur after preforming the previous steps if you are using a 64GB microSD. The reason for this is that Hekate expects the FAT32 partition to use a 32k cluster size, which gparted only does by default if the partition is larger than 32GB, which it likely won't be on a 64GB microSD. This will wipe all the data on your FAT32 partition . To fix this, follow these instructions: Open a terminal. Run sudo fdisk -l . Enter your password if prompted. This will print information about all drives connected to your computer. Use this information to determine the FAT32 partition on your SD card. Specifically, note the value under the column Device . This will look something like /dev/xxx , where xxx will differ on your system (can also be longer than three characters). It always ends with a number! Run sudo mkdosfs <value> -s 64 -F 32 -I . Enter your password if prompted. Replace <value> with the value you got from step 2. Wait until it finishes running. Depending on the size of your microSD card, this might take a while. Run sudo fatlabel <value> \"sMicroSD\" . Enter your password if prompted. Replace <value> with the value you got from step 2.","title":"Manual instructions (Linux)"},{"location":"user_guide/emummc/linux_partitioning/#continue-to-sd-preparations","text":"","title":"Continue to SD Preparations "},{"location":"user_guide/emummc/making_emummc/","text":"Making the Emummc, getting keys, and making essential backups Making the emuMMC Before you start Before you start, boot your switch normally, and delete all the wifi networks. You can add them back to your sysnand after completing this guide Enter RCM and inject the Hekate payload Use the touch screen to navigate to emuMMC Tap on Create emuMMC , then select SD Partition Tap on Continue . It will start making the emummc now. After it's done return to the emuMMC menu using the Close buttons Tap on Change emuMMC , then SD RAW 1 Go back to the main menu Making a nand backup Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal. Instructions Enter RCM and inject the Hekate payload Use the touch screen to navigate to Tools and then Backup eMMC Tap on eMMC BOOT0 & BOOT1 This may take a few minutes Tap on Close to continue, then tap on eMMC RAW GPP This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, inject Hekate again, and continue the backup by tapping on Tools > Backup eMMC > eMMC RAW GPP Repeat the process until the NAND is completely dumped Press Close > Home > Power Off Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC Getting your Console's Unique Keys Important These keys are critical to have. In an extreme emergency, they can be used in conjunction with your NAND backup and other tools to restore your console to a working state. Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND or emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card. Press any button to return to the main menu. Navigate to 'Power off' with the volume buttons and select it with the power button. Insert your SD card into your PC. Copy prod.keys from the switch folder on your SD card to a safe location on your PC (it is suggested to copy it to the same place that you copied your NAND backup to). Continue to Launching CFW","title":"Making the emuMMC"},{"location":"user_guide/emummc/making_emummc/#making-the-emummc-getting-keys-and-making-essential-backups","text":"","title":"Making the Emummc, getting keys, and making essential backups"},{"location":"user_guide/emummc/making_emummc/#making-the-emummc","text":"Before you start Before you start, boot your switch normally, and delete all the wifi networks. You can add them back to your sysnand after completing this guide Enter RCM and inject the Hekate payload Use the touch screen to navigate to emuMMC Tap on Create emuMMC , then select SD Partition Tap on Continue . It will start making the emummc now. After it's done return to the emuMMC menu using the Close buttons Tap on Change emuMMC , then SD RAW 1 Go back to the main menu","title":"Making the emuMMC"},{"location":"user_guide/emummc/making_emummc/#making-a-nand-backup","text":"Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal.","title":"Making a nand backup"},{"location":"user_guide/emummc/making_emummc/#instructions","text":"Enter RCM and inject the Hekate payload Use the touch screen to navigate to Tools and then Backup eMMC Tap on eMMC BOOT0 & BOOT1 This may take a few minutes Tap on Close to continue, then tap on eMMC RAW GPP This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, inject Hekate again, and continue the backup by tapping on Tools > Backup eMMC > eMMC RAW GPP Repeat the process until the NAND is completely dumped Press Close > Home > Power Off Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC","title":"Instructions"},{"location":"user_guide/emummc/making_emummc/#getting-your-consoles-unique-keys","text":"Important These keys are critical to have. In an extreme emergency, they can be used in conjunction with your NAND backup and other tools to restore your console to a working state. Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND or emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card. Press any button to return to the main menu. Navigate to 'Power off' with the volume buttons and select it with the power button. Insert your SD card into your PC. Copy prod.keys from the switch folder on your SD card to a safe location on your PC (it is suggested to copy it to the same place that you copied your NAND backup to).","title":"Getting your Console's Unique Keys"},{"location":"user_guide/emummc/making_emummc/#continue-to-launching-cfw","text":"","title":"Continue to Launching CFW "},{"location":"user_guide/emummc/partitioning_sd/","text":"Partitioning the SD Card This will delete everything on your sd card Doing this will delete all your data from your sd card, be warned! Backing up your existing Nintendo folder Before we start, if you are using a microSD card already as a storage device for your games, you will want to back up your Nintendo folder that is on the root of your microSD card to a safe place on your computer. This folder contains your downloaded games and game updates. Preperations What you need: The latest release of TegraExplorer Instructions Inject the TegraExplorer payload with your 64GB (or larger) SD card inserted into your Switch. If you forgot how to do this, re-read the sending payload section of the guide. Navigate to SD Format and press the power button to enter the SD format menu. If you can't find the SD Format option, make sure that your SD card is inserted and select Mount SD. Navigate to Format for EmuMMC setup and press the power button to confirm. Read the warning, and press power after 10 seconds to format your SD card. Note: This will delete all data on your SD card. Make sure you backed up your Nintendo folder! This will take about 5 minutes. Press any button to return to the main menu. Navigate to Exit and press the power button to enter the Exit menu. Navigate to Reboot to RCM and press the power button to reboot to RCM. It's now safe to eject your sd card for the next part of the guide. Windows complaining about an unreadable drive If you get the issue that Windows says the SD card is unreadable and wants to format it, do not format! This is likely your emuMMC partition. Continue to SD Preparations","title":"Partitioning the SD"},{"location":"user_guide/emummc/partitioning_sd/#partitioning-the-sd-card","text":"This will delete everything on your sd card Doing this will delete all your data from your sd card, be warned! Backing up your existing Nintendo folder Before we start, if you are using a microSD card already as a storage device for your games, you will want to back up your Nintendo folder that is on the root of your microSD card to a safe place on your computer. This folder contains your downloaded games and game updates.","title":"Partitioning the SD Card"},{"location":"user_guide/emummc/partitioning_sd/#preperations","text":"What you need: The latest release of TegraExplorer","title":"Preperations"},{"location":"user_guide/emummc/partitioning_sd/#instructions","text":"Inject the TegraExplorer payload with your 64GB (or larger) SD card inserted into your Switch. If you forgot how to do this, re-read the sending payload section of the guide. Navigate to SD Format and press the power button to enter the SD format menu. If you can't find the SD Format option, make sure that your SD card is inserted and select Mount SD. Navigate to Format for EmuMMC setup and press the power button to confirm. Read the warning, and press power after 10 seconds to format your SD card. Note: This will delete all data on your SD card. Make sure you backed up your Nintendo folder! This will take about 5 minutes. Press any button to return to the main menu. Navigate to Exit and press the power button to enter the Exit menu. Navigate to Reboot to RCM and press the power button to reboot to RCM. It's now safe to eject your sd card for the next part of the guide. Windows complaining about an unreadable drive If you get the issue that Windows says the SD card is unreadable and wants to format it, do not format! This is likely your emuMMC partition.","title":"Instructions"},{"location":"user_guide/emummc/partitioning_sd/#continue-to-sd-preparations","text":"","title":"Continue to SD Preparations "},{"location":"user_guide/emummc/sd_preparation/","text":"SD Preparation We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and take advantage of other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection. File name extensions If you use Windows, you should enable file name extensions before continuing. See this link for a guide on how to do this. What you need The latest release of Hekate (Download the hekate_ctcaer_(version).zip release of hekate) The hekate config file: hekate_ipl.ini The bootlogo zip folder: bootlogos.zip The latest release of Atmosphere (Download the atmosphere-(version)-master-(version)+hbl-(version)+hbmenu-(version).zip release of Atmosphere.) The latest release of Lockpick_RCM (Download the Lockpick_RCM.bin release of Lockpick) The latest release of EdiZon (Download the SD.zip release of EdiZon) The latest release of FTPD (Download the ftpd.nro release of FTPD) The latest release of NXThemeInstaller (Download the NxThemesInstaller.nro release of NxThemeInstaller) The latest release of NX-Shell (Download the NX-Shell.nro release of nx-shell) The latest release of atmosphere-updater . The latest release of the hbappstore (Download the appstore.nro release of hbappstore) Instructions Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy the bootloader folder from the bootlogos.zip file to the root of your SD card Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card Delete reboot_payload.bin in the atmosphere folder on your SD card Rename Hekate's .bin file to reboot_payload.bin Copy hekate_ipl.ini to the bootloader folder on your SD card Copy Lockpick_RCM.bin to the /bootloader/payloads folder on your SD card Copy the contents of the EdiZon SD.zip file to the root of your SD card Create a folder named appstore inside the switch folder on your SD card, and put appstore.nro in it Copy ftpd.nro , NX-Shell.nro , NxThemesInstaller.nro and atmosphere-updater.nro to the switch folder on your SD card If you were already using your microSD card as a storage device for your games and backed it up before partitioning your microSD card, please place it back on the root of your microSD card. Reinsert your SD card back into your Switch Continue to Making EmuMMC","title":"SD preparations"},{"location":"user_guide/emummc/sd_preparation/#sd-preparation","text":"We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and take advantage of other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection. File name extensions If you use Windows, you should enable file name extensions before continuing. See this link for a guide on how to do this.","title":"SD Preparation"},{"location":"user_guide/emummc/sd_preparation/#what-you-need","text":"The latest release of Hekate (Download the hekate_ctcaer_(version).zip release of hekate) The hekate config file: hekate_ipl.ini The bootlogo zip folder: bootlogos.zip The latest release of Atmosphere (Download the atmosphere-(version)-master-(version)+hbl-(version)+hbmenu-(version).zip release of Atmosphere.) The latest release of Lockpick_RCM (Download the Lockpick_RCM.bin release of Lockpick) The latest release of EdiZon (Download the SD.zip release of EdiZon) The latest release of FTPD (Download the ftpd.nro release of FTPD) The latest release of NXThemeInstaller (Download the NxThemesInstaller.nro release of NxThemeInstaller) The latest release of NX-Shell (Download the NX-Shell.nro release of nx-shell) The latest release of atmosphere-updater . The latest release of the hbappstore (Download the appstore.nro release of hbappstore)","title":"What you need"},{"location":"user_guide/emummc/sd_preparation/#instructions","text":"Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy the bootloader folder from the bootlogos.zip file to the root of your SD card Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card Delete reboot_payload.bin in the atmosphere folder on your SD card Rename Hekate's .bin file to reboot_payload.bin Copy hekate_ipl.ini to the bootloader folder on your SD card Copy Lockpick_RCM.bin to the /bootloader/payloads folder on your SD card Copy the contents of the EdiZon SD.zip file to the root of your SD card Create a folder named appstore inside the switch folder on your SD card, and put appstore.nro in it Copy ftpd.nro , NX-Shell.nro , NxThemesInstaller.nro and atmosphere-updater.nro to the switch folder on your SD card If you were already using your microSD card as a storage device for your games and backed it up before partitioning your microSD card, please place it back on the root of your microSD card. Reinsert your SD card back into your Switch","title":"Instructions"},{"location":"user_guide/emummc/sd_preparation/#continue-to-making-emummc","text":"","title":"Continue to Making EmuMMC "},{"location":"user_guide/emummc/sending_payload/","text":"Sending a Payload If you are here to test if your Switch is patched Make sure you have put your device into RCM and downloaded Hekate (if necessary, extract its zip file onto the root of your SD card) before continuing. Once finished, if your console is not patched, continue with Partitioning the SD instead of Making the emuMMC at the end of this page. Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differ depending on what hardware you have available. Windows What you need The latest release of TegraRcmGUI (either the MSI or zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer Instructions Install and run TegraRcmGUI. Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions. Connect your Switch in RCM to your PC using the USB cable. Navigate to the Payload tab of TegraRcmGUI. Your Switch should be shown as detected in the bottom left corner. Press the file button next to Inject payload , and navigate to and select your payload .bin file. The first time you read this page you should inject TegraExplorer.bin. Click Inject payload to launch the payload you selected. Mac / Linux What you need The latest release of fusee-interfacee-tk A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer Instructions Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo ). Connect your Switch in RCM to your PC using the USB cable. Wait for your Switch to be shown as found in the injector. Press Select Payload , and navigate to and select your payload .bin file. The first time you read this page you should inject TegraExplorer.bin. Click Send Payload! to launch the payload you selected. Android What you need The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone! Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer Instructions Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone. A tool such as Amaze File Manager can do this. Launch Rekado on your phone. Navigate to Payloads , then press the + button at the bottom right. Navigate to your hekate_ctcaer .bin file and tap it to add it to Rekado's menu. Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled . Connect your Switch in RCM to your phone using the USB cable. If prompted, grant Rekado access to the Switch. Select your payload .bin file in the dialog that pops up. The first time you read this page you should inject TegraExplorer.bin. Chomebook What you need A USB-C cable If your chromebook has a USB-C port, do note that this will not work using a C-C cable. Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer Instructions Go to the injection website and scroll all the way down Select the \"Upload Payload\" option and upload the hekate_ctcaer .bin file from the Hekate .zip file. The first time you read this page you should inject TegraExplorer.bin. Connect your Switch in RCM to your Chromebook using the USB cable. Select \"Do the thing\". A pop up will appear. Click the APX option. Press the Connect button and the payload will be injected. If nothing happens after you send the payload If your console's screen remains black after you've sent Hekate, it's possible your payload was corrupted, or that your console is patched. If your payload injector program shows that 0 bytes were sent, then it is definitely patched, so you'll be unable to proceed with the rest of the guide. Continue to Partitioning the SD","title":"Sending a payload"},{"location":"user_guide/emummc/sending_payload/#sending-a-payload","text":"If you are here to test if your Switch is patched Make sure you have put your device into RCM and downloaded Hekate (if necessary, extract its zip file onto the root of your SD card) before continuing. Once finished, if your console is not patched, continue with Partitioning the SD instead of Making the emuMMC at the end of this page. Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differ depending on what hardware you have available.","title":"Sending a Payload"},{"location":"user_guide/emummc/sending_payload/#windows","text":"","title":"Windows"},{"location":"user_guide/emummc/sending_payload/#what-you-need","text":"The latest release of TegraRcmGUI (either the MSI or zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer","title":"What you need"},{"location":"user_guide/emummc/sending_payload/#instructions","text":"Install and run TegraRcmGUI. Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions. Connect your Switch in RCM to your PC using the USB cable. Navigate to the Payload tab of TegraRcmGUI. Your Switch should be shown as detected in the bottom left corner. Press the file button next to Inject payload , and navigate to and select your payload .bin file. The first time you read this page you should inject TegraExplorer.bin. Click Inject payload to launch the payload you selected.","title":"Instructions"},{"location":"user_guide/emummc/sending_payload/#mac-linux","text":"","title":"Mac / Linux"},{"location":"user_guide/emummc/sending_payload/#what-you-need_1","text":"The latest release of fusee-interfacee-tk A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer","title":"What you need"},{"location":"user_guide/emummc/sending_payload/#instructions_1","text":"Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo ). Connect your Switch in RCM to your PC using the USB cable. Wait for your Switch to be shown as found in the injector. Press Select Payload , and navigate to and select your payload .bin file. The first time you read this page you should inject TegraExplorer.bin. Click Send Payload! to launch the payload you selected.","title":"Instructions"},{"location":"user_guide/emummc/sending_payload/#android","text":"","title":"Android"},{"location":"user_guide/emummc/sending_payload/#what-you-need_2","text":"The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone! Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer","title":"What you need"},{"location":"user_guide/emummc/sending_payload/#instructions_2","text":"Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone. A tool such as Amaze File Manager can do this. Launch Rekado on your phone. Navigate to Payloads , then press the + button at the bottom right. Navigate to your hekate_ctcaer .bin file and tap it to add it to Rekado's menu. Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled . Connect your Switch in RCM to your phone using the USB cable. If prompted, grant Rekado access to the Switch. Select your payload .bin file in the dialog that pops up. The first time you read this page you should inject TegraExplorer.bin.","title":"Instructions"},{"location":"user_guide/emummc/sending_payload/#chomebook","text":"","title":"Chomebook"},{"location":"user_guide/emummc/sending_payload/#what-you-need_3","text":"A USB-C cable If your chromebook has a USB-C port, do note that this will not work using a C-C cable. Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) The latest release of TegraExplorer","title":"What you need"},{"location":"user_guide/emummc/sending_payload/#instructions_3","text":"Go to the injection website and scroll all the way down Select the \"Upload Payload\" option and upload the hekate_ctcaer .bin file from the Hekate .zip file. The first time you read this page you should inject TegraExplorer.bin. Connect your Switch in RCM to your Chromebook using the USB cable. Select \"Do the thing\". A pop up will appear. Click the APX option. Press the Connect button and the payload will be injected. If nothing happens after you send the payload If your console's screen remains black after you've sent Hekate, it's possible your payload was corrupted, or that your console is patched. If your payload injector program shows that 0 bytes were sent, then it is definitely patched, so you'll be unable to proceed with the rest of the guide.","title":"Instructions"},{"location":"user_guide/emummc/sending_payload/#continue-to-partitioning-the-sd","text":"","title":"Continue to Partitioning the SD "},{"location":"user_guide/sysnand/entering_rcm/","text":"Entering RCM As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not possible to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom. Instructions Power off the Switch and use one of the methods listed below to short the pins on the right joycon rail. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again. Otherwise, if your console did not turn on normally, and the screen remained black with no backlight, your Switch is in RCM. RCM Jig (Easiest for beginners) Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins (10 and a ground) are shorted every time. Jigs range in price, with the ones we recommend being $5. They're slightly more expensive than some mass produced jigs, however we can guarantee their quality. Also spending $5 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig. In the case you plan to make you own jig, this image lays out the pads numbers on the console. Make sure your jig NEVER touches pin 4. Pin 4 provides 5v power to the Joycons, if connected to any other pin you will fry the console. Soldered Joy-Con Pads - Physical RCM Button (Safest) Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This method comes to us from the mind of pbanj#9188 on Discord. All pictures of this method in action were provided by him, with some supplementary images provided by eip \u221e#3283 on Discord. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however you will be soldering wires to pins 7 and 10 (shown below) and wiring them to the \"Joycon release button\" at the top back of the right hand Joycon. In order to start this method you will want to take two lengths of wire, and wrap one end of each into a small circle. You will then want to take the circular end of one of the wires and add a small amount of solder, keeping it mostly flat (ONLY DO THIS TO ONE OF THE WIRES!). You will then glue this wire down to the below point on the Joycon release button. Make sure glue doesn't cover the top of the solder/wire as it will act as a contact point. Also, ensure that you leave enough space for the button to function correctly. Try pushing the button from the outside and observing its travel path so that you can see where and how you should safely glue the solder glob. The first wire should now be in place as seen by the green circle below. The second wire does not need any solder, instead you will hold it in place using the screw as shown by the red circle in the picture below. Pressing the Joycon button in you should now notice the solder point you created making contact with the piece of metal held in by the screw. Once you have these elements in place you want to connect one wire to pad 7 and the other to pad 10 (it doesn't matter which is which). After that you have successfully created an RCM button on your Joycon. You will now need to hold down the Joycon release button when attempting to boot RCM. Soldered Joy-Con Pads - 7 & 10 Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pins 7 and 10 (shown below) together with a surface-mount 0805 10k resistor. Apart from using a physical switch/button, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server. Soldered Joy-Con Pads - 9 & 10 Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pads 9 and 10 (seen below) together. This can either be done using a small wire, or directly bridging the pads with solder. Here is an example from YyAoMmIi#3705 on our Discord server. Bent Joy-Con Pins (Not recommended) Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 and 10 (shown below) slightly up and towards each other so they touch, shorting them. Here is an example from Sonlen#1414 on our Discord server. Continue to Sending a Payload","title":"Entering RCM"},{"location":"user_guide/sysnand/entering_rcm/#entering-rcm","text":"As the Switch uses a Tegra X1 processor, it has a special recovery mode that is, in most scenarios, useless for the end-user. Fortunately, due to the fusee-gelee vulnerability, this special mode acts as our gateway into CFW. There are several methods of entering RCM ( R e C overy M ode). The most affordable of these require nothing more than common household items, while the most reliable are very cheap ($10). Patched Switch Note that patched units can enter RCM, but it is not possible to send a payload on those systems. Also note that RCM is a different recovery mode than the one accessed by holding Volume Up, Volume Down, and Power. Note The order of methods on this page is in the order of ease. The easiest to immediately accomplish are listed at the top, and the most advanced/difficult methods are at the bottom.","title":"Entering RCM"},{"location":"user_guide/sysnand/entering_rcm/#instructions","text":"Power off the Switch and use one of the methods listed below to short the pins on the right joycon rail. Hold Volume Up and press the Power button. If your Switch displays the Nintendo logo and boots normally or immediately shuts down, you didn't successfully enter RCM and should try again. Otherwise, if your console did not turn on normally, and the screen remained black with no backlight, your Switch is in RCM.","title":"Instructions"},{"location":"user_guide/sysnand/entering_rcm/#rcm-jig-easiest-for-beginners","text":"Click to expand! Note Some jig designs use paperclips, inheriting the same risks as the Metal Bridge / Paperclip method. If you would like a safe jig design, we highly recommend switchjigs.com . This method is similar to the Metal Bridge / Paperclip method, but is more reliable and safer in many cases. Jigs hold a wire in place so the correct pins (10 and a ground) are shorted every time. Jigs range in price, with the ones we recommend being $5. They're slightly more expensive than some mass produced jigs, however we can guarantee their quality. Also spending $5 on a quality jig using 32-gauge wire is a smaller cost than replacing your entire Joy-Con rail after the pins are scratched off by a paperclip jig. In the case you plan to make you own jig, this image lays out the pads numbers on the console. Make sure your jig NEVER touches pin 4. Pin 4 provides 5v power to the Joycons, if connected to any other pin you will fry the console.","title":"RCM Jig (Easiest for beginners)"},{"location":"user_guide/sysnand/entering_rcm/#soldered-joy-con-pads-physical-rcm-button-safest","text":"Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. This method comes to us from the mind of pbanj#9188 on Discord. All pictures of this method in action were provided by him, with some supplementary images provided by eip \u221e#3283 on Discord. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however you will be soldering wires to pins 7 and 10 (shown below) and wiring them to the \"Joycon release button\" at the top back of the right hand Joycon. In order to start this method you will want to take two lengths of wire, and wrap one end of each into a small circle. You will then want to take the circular end of one of the wires and add a small amount of solder, keeping it mostly flat (ONLY DO THIS TO ONE OF THE WIRES!). You will then glue this wire down to the below point on the Joycon release button. Make sure glue doesn't cover the top of the solder/wire as it will act as a contact point. Also, ensure that you leave enough space for the button to function correctly. Try pushing the button from the outside and observing its travel path so that you can see where and how you should safely glue the solder glob. The first wire should now be in place as seen by the green circle below. The second wire does not need any solder, instead you will hold it in place using the screw as shown by the red circle in the picture below. Pressing the Joycon button in you should now notice the solder point you created making contact with the piece of metal held in by the screw. Once you have these elements in place you want to connect one wire to pad 7 and the other to pad 10 (it doesn't matter which is which). After that you have successfully created an RCM button on your Joycon. You will now need to hold down the Joycon release button when attempting to boot RCM.","title":"Soldered Joy-Con Pads - Physical RCM Button (Safest)"},{"location":"user_guide/sysnand/entering_rcm/#soldered-joy-con-pads-7-10","text":"Click to expand! Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pins 7 and 10 (shown below) together with a surface-mount 0805 10k resistor. Apart from using a physical switch/button, this is currently considered the safest method that involves soldering to pads. Here is an example from stuckpixel#3421 on the ReSwitched Discord server.","title":"Soldered Joy-Con Pads - 7 &amp; 10"},{"location":"user_guide/sysnand/entering_rcm/#soldered-joy-con-pads-9-10","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. It is recommended to solder pads 7 and 10 together with a resistor instead. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily. This is similar to the previous method, however the goal is to solder pads 9 and 10 (seen below) together. This can either be done using a small wire, or directly bridging the pads with solder. Here is an example from YyAoMmIi#3705 on our Discord server.","title":"Soldered Joy-Con Pads - 9 &amp; 10"},{"location":"user_guide/sysnand/entering_rcm/#bent-joy-con-pins-not-recommended","text":"Click to expand! Note This method will result in the right Joy-Con being detected as in wireless mode while attached to the Switch, and this method may result in the Joy-Con being permanently detected as wireless if you update the Joy-Con firmware while this mod is installed. In the latter case, fixing this requires opening up the Joy-Con and reseating the battery. Note This method requires opening your right Joy-Con, voiding its warranty. Not for the faint of heart. The goal of this method is to open the right handed Joy-Con to the point that you can reach the contact pads easily, and use a thin object such as a knife to gently bend pin 9 and 10 (shown below) slightly up and towards each other so they touch, shorting them. Here is an example from Sonlen#1414 on our Discord server.","title":"Bent Joy-Con Pins (Not recommended)"},{"location":"user_guide/sysnand/entering_rcm/#continue-to-sending-a-payload","text":"","title":"Continue to Sending a Payload "},{"location":"user_guide/sysnand/launching_cfw/","text":"Launching CFW Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch completely loses power for any reason (shutting down, battery dying, etc.), CFW will no longer be active and you will need to follow these instructions again. Instructions Power on your Switch into RCM, and inject the Hekate payload Navigate to Launch using the touch screen Find Atmosphere FSS0 SYS and launch it Your Switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number, as well as an S at the end, indicating you are booted into sysMMC. Launching the Homebrew Menu You will now be able to launch the Homebrew Menu by opening the album or by holding the R button while launching any game (including demos/cartridges), application (e.g. Youtube/Hulu). If R is not held, the game or application will launch like normal. A note about using the album for the Homebrew Menu Using the album for the Homebrew Menu instead of a game or application has several limitations, including but not limited to: a smaller amount of available memory (RAM), as well as being unable to launch a full-featured web browser. It is strongly recommended to launch homebrew through applications or games instead. Adding new applications Place homebrew applications ( .nro files) into the switch folder on your SD card. What the included homebrew applications do EdiZon is a save manager, it can dump and restore saves from/to your system. For more information, see Save Management FTPD is a ftp tool for connecting your Switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the Switch. You can move files, listen to mp3's, view images etc. NXThemeInstaller is a theme installer app. See the Theming section of our guide for more information hbappstore is a homebrew app store where a large collection of switch homebrew is kept.","title":"Launching CFW"},{"location":"user_guide/sysnand/launching_cfw/#launching-cfw","text":"Now that the preparation work is out of the way, we're finally ready to launch custom firmware on the Switch. Unlike systems such as the DSi, Wii, or 3DS, Switch CFW is currently volatile- it will only work as long as your Switch is on. As soon as your Switch completely loses power for any reason (shutting down, battery dying, etc.), CFW will no longer be active and you will need to follow these instructions again.","title":"Launching CFW"},{"location":"user_guide/sysnand/launching_cfw/#instructions","text":"Power on your Switch into RCM, and inject the Hekate payload Navigate to Launch using the touch screen Find Atmosphere FSS0 SYS and launch it Your Switch is now booting into Atmosphere. To verify Atmosphere launched properly, open the Settings applet, and navigate to System. You should see AMS next to the version number, as well as an S at the end, indicating you are booted into sysMMC.","title":"Instructions"},{"location":"user_guide/sysnand/launching_cfw/#launching-the-homebrew-menu","text":"You will now be able to launch the Homebrew Menu by opening the album or by holding the R button while launching any game (including demos/cartridges), application (e.g. Youtube/Hulu). If R is not held, the game or application will launch like normal. A note about using the album for the Homebrew Menu Using the album for the Homebrew Menu instead of a game or application has several limitations, including but not limited to: a smaller amount of available memory (RAM), as well as being unable to launch a full-featured web browser. It is strongly recommended to launch homebrew through applications or games instead. Adding new applications Place homebrew applications ( .nro files) into the switch folder on your SD card.","title":"Launching the Homebrew Menu"},{"location":"user_guide/sysnand/launching_cfw/#what-the-included-homebrew-applications-do","text":"EdiZon is a save manager, it can dump and restore saves from/to your system. For more information, see Save Management FTPD is a ftp tool for connecting your Switch's sd card wirelessly to your pc. Tools like Filezilla can connect to your switch on (ip of switch):5000 NX-Shell is a file explorer for the Switch. You can move files, listen to mp3's, view images etc. NXThemeInstaller is a theme installer app. See the Theming section of our guide for more information hbappstore is a homebrew app store where a large collection of switch homebrew is kept.","title":"What the included homebrew applications do"},{"location":"user_guide/sysnand/making_essential_backups/","text":"Making Essential Backups and dumping keys Important It is critical to make these backups. Do not skip these steps. Making a NAND Backup Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal. Instructions Enter RCM and inject the Hekate payload Use the touch screen to navigate to Tools and then Backup eMMC Tap on eMMC BOOT0 & BOOT1 This may take a few minutes Tap on Close to continue, then tap on eMMC RAW GPP This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, inject Hekate again, and continue the backup by tapping on Tools > Backup eMMC > eMMC RAW GPP Repeat the process until the NAND is completely dumped Press Close > Home > Power Off Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC Getting your Console's Unique Keys Important These keys are critical to have. In an extreme emergency, they can be used in conjunction with your NAND backup and other tools to restore your console to a working state. Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND and emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card. Press any button to return to the main menu. Navigate to 'Power off' with the volume buttons and select it with the power button. Insert your SD card into your PC. Copy prod.keys from the switch folder on your SD card to a safe location on your PC (it is suggested to copy it to the same place that you copied your NAND backup to). Continue to Launching CFW","title":"Making Essential Backups and dumping keys"},{"location":"user_guide/sysnand/making_essential_backups/#making-essential-backups-and-dumping-keys","text":"Important It is critical to make these backups. Do not skip these steps.","title":"Making Essential Backups and dumping keys"},{"location":"user_guide/sysnand/making_essential_backups/#making-a-nand-backup","text":"Important A NAND backup is crucial. They can be used to restore the device to a working state in case of emergencies. Once the backup is finished, keep it somewhere safe. The best backup is the one you have but never need, and the worst backup is the one you need but never made. To save space, it's recommended to compress the end-result with a .zip file or something similar. It's highly recommended that you use an SD card that is formatted to FAT32 and has at least 32 gigabytes of space free. This will still work on smaller cards, but it's not ideal.","title":"Making a NAND Backup"},{"location":"user_guide/sysnand/making_essential_backups/#instructions","text":"Enter RCM and inject the Hekate payload Use the touch screen to navigate to Tools and then Backup eMMC Tap on eMMC BOOT0 & BOOT1 This may take a few minutes Tap on Close to continue, then tap on eMMC RAW GPP This will take a long time On FAT32 SD cards or cards that have less than 32 gigabytes of space available, the NAND will be split into 1 or 2 gigabyte parts. Hekate will stop producing these parts when it runs out of space. When this happens, do the following: Power off your system Insert your SD card into your PC Move all files from the backup folder on your SD card to a safe location on your PC Insert your SD card into your Switch Enter RCM again, inject Hekate again, and continue the backup by tapping on Tools > Backup eMMC > eMMC RAW GPP Repeat the process until the NAND is completely dumped Press Close > Home > Power Off Insert your SD card into your PC Copy the backup folder on your SD card to a safe location on your PC","title":"Instructions"},{"location":"user_guide/sysnand/making_essential_backups/#getting-your-consoles-unique-keys","text":"Important These keys are critical to have. In an extreme emergency, they can be used in conjunction with your NAND backup and other tools to restore your console to a working state. Enter RCM and inject the Hekate payload. Tap the Payloads option, then press Lockpick_RCM.bin. If Lockpick_RCM asks you to select between SysNAND and emuMMC, choose SysNAND by navigating with the volume buttons and pressing the power button. If not, continue with step 4. If Lockpick_RCM prompts you to Reboot to Sept , press power or either volume button to do so. A \"sept by Atmosphere\" logo will then display, followed by Lockpick_RCM starting again. If it does not prompt you, continue on to step 5. Lockpick_RCM should now inform you that your keys have been saved to /switch/prod.keys on the SD card. Press any button to return to the main menu. Navigate to 'Power off' with the volume buttons and select it with the power button. Insert your SD card into your PC. Copy prod.keys from the switch folder on your SD card to a safe location on your PC (it is suggested to copy it to the same place that you copied your NAND backup to).","title":"Getting your Console's Unique Keys"},{"location":"user_guide/sysnand/making_essential_backups/#continue-to-launching-cfw","text":"","title":"Continue to Launching CFW "},{"location":"user_guide/sysnand/sd_preparation/","text":"SD Preparation We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and take advantage of other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection. NxThemeInstaller The ban risks of using Switch themes are at this time unknown. Use them at your own risk. File name extensions If you use Windows, you should enable file name extensions before continuing. See this link for a guide on how to do this. What you need The latest release of Hekate (Download the hekate_ctcaer_(version).zip release of hekate) The hekate config file: hekate_ipl.ini The bootlogo zip folder: bootlogos.zip The latest release of Atmosphere (Download the atmosphere-(version)-master-(version)+hbl-(version)+hbmenu-(version).zip release of Atmosphere.) The latest release of Lockpick_RCM (Download the Lockpick_RCM.bin release of Lockpick) The latest release of EdiZon (Download the SD.zip release of EdiZon) The latest release of FTPD (Download the ftpd.nro release of FTPD) The latest release of NXThemeInstaller (Download the NxThemesInstaller.nro release of NxThemeInstaller) The latest release of NX-Shell (Download the NX-Shell.nro release of nx-shell) The latest release of atmosphere-updater . The latest release of the hbappstore (Download the appstore.nro release of hbappstore) Instructions Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy the bootloader folder from the bootlogos.zip file to the root of your SD card Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card Delete reboot_payload.bin in the atmosphere folder on your SD card Rename Hekate's .bin file to reboot_payload.bin Copy hekate_ipl.ini to the bootloader folder on your SD card Copy Lockpick_RCM.bin to the /bootloader/payloads folder on your SD card Copy the contents of the EdiZon SD.zip file to the root of your SD card Create a folder named appstore inside the switch folder on your SD card, and put appstore.nro in it Copy ftpd.nro , NX-Shell.nro , NxThemesInstaller.nro and atmosphere-updater.nro to the switch folder on your SD card Reinsert your SD card back into your Switch Continue to Entering RCM","title":"SD Preparation"},{"location":"user_guide/sysnand/sd_preparation/#sd-preparation","text":"We will now place the required files for the Atmosphere custom firmware and some additional homebrew files on the SD card. Atmosphere has its own bootloader, called fusee (primary). For the purposes of this guide we will be using Hekate instead, so that we can back up the system's NAND (internal storage) and take advantage of other advanced features in the future. Notice Your SD card will need to be formatted as either FAT32 or exFAT. FAT32 is recommended as it is more stable and will work out of the box with the Switch's operating system, but has a file size limit of 4GB. If you plan on using exFAT, you will need to install the exFAT update for your Switch, which is downloaded when you insert an exFAT formatted SD card in to your Switch. Note that this will update your console and requires an internet connection. NxThemeInstaller The ban risks of using Switch themes are at this time unknown. Use them at your own risk. File name extensions If you use Windows, you should enable file name extensions before continuing. See this link for a guide on how to do this.","title":"SD Preparation"},{"location":"user_guide/sysnand/sd_preparation/#what-you-need","text":"The latest release of Hekate (Download the hekate_ctcaer_(version).zip release of hekate) The hekate config file: hekate_ipl.ini The bootlogo zip folder: bootlogos.zip The latest release of Atmosphere (Download the atmosphere-(version)-master-(version)+hbl-(version)+hbmenu-(version).zip release of Atmosphere.) The latest release of Lockpick_RCM (Download the Lockpick_RCM.bin release of Lockpick) The latest release of EdiZon (Download the SD.zip release of EdiZon) The latest release of FTPD (Download the ftpd.nro release of FTPD) The latest release of NXThemeInstaller (Download the NxThemesInstaller.nro release of NxThemeInstaller) The latest release of NX-Shell (Download the NX-Shell.nro release of nx-shell) The latest release of atmosphere-updater . The latest release of the hbappstore (Download the appstore.nro release of hbappstore)","title":"What you need"},{"location":"user_guide/sysnand/sd_preparation/#instructions","text":"Insert your Switch's SD card into your PC Copy the contents of the Atmosphere .zip file to the root of your SD card Copy the bootloader folder from the Hekate .zip file to the root of your SD card Copy the bootloader folder from the bootlogos.zip file to the root of your SD card Copy Hekate's .bin file from the Hekate .zip file to the atmosphere folder on your SD card Delete reboot_payload.bin in the atmosphere folder on your SD card Rename Hekate's .bin file to reboot_payload.bin Copy hekate_ipl.ini to the bootloader folder on your SD card Copy Lockpick_RCM.bin to the /bootloader/payloads folder on your SD card Copy the contents of the EdiZon SD.zip file to the root of your SD card Create a folder named appstore inside the switch folder on your SD card, and put appstore.nro in it Copy ftpd.nro , NX-Shell.nro , NxThemesInstaller.nro and atmosphere-updater.nro to the switch folder on your SD card Reinsert your SD card back into your Switch","title":"Instructions"},{"location":"user_guide/sysnand/sd_preparation/#continue-to-entering-rcm","text":"","title":"Continue to Entering RCM "},{"location":"user_guide/sysnand/sending_payload/","text":"Sending a Payload If you were sent here directly Make sure you've put your device into RCM , and downloaded Hekate (extract its zip file if necessary) before continuing. Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differs depending on what hardware you have available. Windows What you need The latest release of TegraRcmGUI (either the MSI or zip) The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Instructions Install and run TegraRCMGUI Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions Connect your Switch in RCM to your PC using the USB cable Navigate to the Payload tab of TegraRcmGUI Your Switch should be shown as detected in the bottom left corner Press the file button next to Inject payload , and navigate to and select your hekate_ctcaer .bin file Click Inject payload to launch Hekate Mac / Linux What you need The latest release of fusee-interfacee-tk The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C) Instructions Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo .) Connect your Switch in RCM to your PC using the USB cable Wait for your Switch to be shown as found in the injector Press Select Payload , and navigate to and select your hekate_ctcaer .bin file Click Send Payload! to launch Hekate Android What you need The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone! Instructions Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone A tool such as Amaze File Manager can do this Launch Rekado on your phone Navigate to Payloads , then press the + button at the bottom right Navigate to your hekate_ctcaer .bin file, and tap it to add it to Rekado's menu Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled Connect your Switch in RCM to your phone using the USB cable If prompted, grant Rekado access to the Switch Select your hekate_ctcaer .bin file in the dialog that pops up Chomebook What you need A USB-C cable If your chromebook has a USB-C port, do note that this will not work using a C-C cable. Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) Instructions Go to the injection website and scroll all the way down Select the \"Upload Payload\" option and upload the hekate_ctcaer .bin file from the Hekate .zip file. Connect your Switch in RCM to your Chromebook using the USB cable. Select \"Do the thing\". A pop up will appear. Click the APX option. Press the Connect button and the payload will be injected. If nothing happens after you send the payload If your console's screen remains black after you've sent Hekate, it's possible your payload was corrupted, or that your console is patched. If your payload injector program shows that 0 bytes were sent, then it is definitely patched, so you'll be unable to proceed with the rest of the guide. Continue to Making Essential Backups","title":"Sending a Payload"},{"location":"user_guide/sysnand/sending_payload/#sending-a-payload","text":"If you were sent here directly Make sure you've put your device into RCM , and downloaded Hekate (extract its zip file if necessary) before continuing. Now that the device is in RCM, we will need to send it a payload. The methods are mostly the same, but slightly differs depending on what hardware you have available.","title":"Sending a Payload"},{"location":"user_guide/sysnand/sending_payload/#windows","text":"","title":"Windows"},{"location":"user_guide/sysnand/sending_payload/#what-you-need","text":"The latest release of TegraRcmGUI (either the MSI or zip) The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C)","title":"What you need"},{"location":"user_guide/sysnand/sending_payload/#instructions","text":"Install and run TegraRCMGUI Navigate to the Settings tab, then press Install Driver and follow the on-screen instructions Connect your Switch in RCM to your PC using the USB cable Navigate to the Payload tab of TegraRcmGUI Your Switch should be shown as detected in the bottom left corner Press the file button next to Inject payload , and navigate to and select your hekate_ctcaer .bin file Click Inject payload to launch Hekate","title":"Instructions"},{"location":"user_guide/sysnand/sending_payload/#mac-linux","text":"","title":"Mac / Linux"},{"location":"user_guide/sysnand/sending_payload/#what-you-need_1","text":"The latest release of fusee-interfacee-tk The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-A to USB-C cable (or a standard USB-C cable if your computer natively supports USB-C)","title":"What you need"},{"location":"user_guide/sysnand/sending_payload/#instructions_1","text":"Download and run the payload injector (if you are on Linux, you will need to run this program as root or use sudo .) Connect your Switch in RCM to your PC using the USB cable Wait for your Switch to be shown as found in the injector Press Select Payload , and navigate to and select your hekate_ctcaer .bin file Click Send Payload! to launch Hekate","title":"Instructions"},{"location":"user_guide/sysnand/sending_payload/#android","text":"","title":"Android"},{"location":"user_guide/sysnand/sending_payload/#what-you-need_2","text":"The latest release of Rekado You will need to enable Unknown Sources in your device settings to install this The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip) A USB-C cable If your device has a USB-C port, you may use a C-C cable If your device only has a Micro USB port, you will need a USB OTG adapter and a USB A-C cable This will not work on every phone!","title":"What you need"},{"location":"user_guide/sysnand/sending_payload/#instructions_2","text":"Copy the hekate_ctcaer .bin file from the Hekate .zip file to a location on your phone A tool such as Amaze File Manager can do this Launch Rekado on your phone Navigate to Payloads , then press the + button at the bottom right Navigate to your hekate_ctcaer .bin file, and tap it to add it to Rekado's menu Optional, but recommended : Navigate to Rekado's settings and enable Hide bundled Connect your Switch in RCM to your phone using the USB cable If prompted, grant Rekado access to the Switch Select your hekate_ctcaer .bin file in the dialog that pops up","title":"Instructions"},{"location":"user_guide/sysnand/sending_payload/#chomebook","text":"","title":"Chomebook"},{"location":"user_guide/sysnand/sending_payload/#what-you-need_3","text":"A USB-C cable If your chromebook has a USB-C port, do note that this will not work using a C-C cable. Payloads you'll need for this guide: The latest release of Hekate (either the hekate_ctcaer bin or the hekate_ctcaer zip)","title":"What you need"},{"location":"user_guide/sysnand/sending_payload/#instructions_3","text":"Go to the injection website and scroll all the way down Select the \"Upload Payload\" option and upload the hekate_ctcaer .bin file from the Hekate .zip file. Connect your Switch in RCM to your Chromebook using the USB cable. Select \"Do the thing\". A pop up will appear. Click the APX option. Press the Connect button and the payload will be injected. If nothing happens after you send the payload If your console's screen remains black after you've sent Hekate, it's possible your payload was corrupted, or that your console is patched. If your payload injector program shows that 0 bytes were sent, then it is definitely patched, so you'll be unable to proceed with the rest of the guide.","title":"Instructions"},{"location":"user_guide/sysnand/sending_payload/#continue-to-making-essential-backups","text":"","title":"Continue to Making Essential Backups "}]}